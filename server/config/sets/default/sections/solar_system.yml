---
######
# Solar System configuration
######

# Maximum number of orbits where planets and asteroids can be. This is also
# maximum number of planets available, if you try to create more planets than
# there are orbits, generator will fail!
orbit.count: 3

# How much time does it take to go between points in orbit. 1 is normal hop
# time, 2 is double time, 0.5 is half time.
#
# These link weights are just for algorithms to allow stable travel path
# determinism. They should not affect actual flight speeds.
links.orbit.weight: 1 + 0.00000001 * position
# How much time does it take to go between orbits.
links.parent.weight: 1 + 0.000001 * position
# How much time does it take to land to the planet. Does not support formulas!
links.planet.weight: 0.2

# How much time should jump from/to regular solar system take?
regular.jump.multiplier: 1.5
# How much time should jump from/to global battleground take?
battleground.jump.multiplier: 4

### Unit spawning
# Available strategies:
# - outer_circle: Spawn only in last circle of solar system, avoiding jumpgates.
# - random: Spawn anywhere in the solar system.

# Time range for spawning.
spawn.home.delay: [<%= 3.hours %> / speed, <%= 6.hours %> / speed]
# Maximum number of spots occupied by NPC units in SS.
spawn.home.max_spots: 8
# - [count_from, count_to, type, flank]
# count_from and count_to are formulas with:
# - counter: which time spawn is being done in this SS.
# - spot: which free spot is this?
#
# count numbers are inclusive.
spawn.home.units:
  - [3 + counter / (spot + 18), 5 + counter / (spot + 12), Dirac, 0]
  - [5 + counter / (spot + 10), 8 + counter / (spot + 7), Dirac, 1]
  - [1 + counter / (spot + 54), 5 + counter / (spot + 36), Thor, 0]
  - [2 + counter / (spot + 30), 8 + counter / (spot + 21), Thor, 1]
  - [0 + counter / (spot + 30), 2 + counter / (spot + 28), Demosis, 0]
  - [0 + counter / (spot + 55), 1 + counter / (spot + 40), Demosis, 1]
# Spawning strategy to use
spawn.home.strategy: outer_circle

spawn.regular.delay: [<%= 12.hours %> / speed, <%= 24.hours %> / speed]
spawn.regular.max_spots: 5
spawn.regular.units:
  - [3 + counter * 3 / 2 / (spot + 18), 5 + counter * 3 / 2 / (spot + 12), Dirac, 0]
  - [5 + counter * 3 / 2 / (spot + 10), 8 + counter * 3 / 2 / (spot + 7), Dirac, 1]
  - [1 + counter * 3 / 2 / (spot + 54), 5 + counter * 3 / 2 / (spot + 36), Thor, 0]
  - [2 + counter * 3 / 2 / (spot + 30), 8 + counter * 3 / 2 / (spot + 21), Thor, 1]
  - [0 + counter * 3 / 2 / (spot + 30), 2 + counter * 3 / 2 / (spot + 28), Demosis, 0]
  - [0 + counter * 3 / 2 / (spot + 55), 1 + counter * 3 / 2 / (spot + 40), Demosis, 1]
spawn.regular.strategy: random

spawn.mini_battleground.delay: [<%= 6.hours %> / speed, <%= 24.hours %> / speed]
spawn.mini_battleground.max_spots: 6
spawn.mini_battleground.units:
  - [3 + counter * 3 / (spot + 18), 5 + counter * 3 / (spot + 12), Dirac, 0]
  - [5 + counter * 3 / (spot + 10), 8 + counter * 3 / (spot + 7), Dirac, 1]
  - [1 + counter * 3 / (spot + 54), 5 + counter * 3 / (spot + 36), Thor, 0]
  - [2 + counter * 3 / (spot + 30), 8 + counter * 3 / (spot + 21), Thor, 1]
  - [0 + counter * 3 / (spot + 30), 2 + counter * 3 / (spot + 28), Demosis, 0]
  - [0 + counter * 3 / (spot + 55), 1 + counter * 3 / (spot + 40), Demosis, 1]
  - [0, 1 + counter / 50 / spot, ConvoyShip, 1]
spawn.mini_battleground.strategy: random

spawn.battleground.delay: [<%= 12.hours %> / speed, <%= 36.hours %> / speed]
spawn.battleground.max_spots: 1
spawn.battleground.units:
  - [1,  1, BossShip, 0]
  - [0,  3 + counter / 20, ConvoyShip, 1]
  - [0, 10 * counter, Dirac, 0]
  - [0, 15 * counter, Dirac, 1]
  - [0,  5 * counter, Thor, 0]
  - [0, 10 * counter, Thor, 1]
  - [0,  5 * counter, Demosis, 0]
  - [0,  3 * counter, Demosis, 1]
spawn.battleground.strategy: outer_circle

