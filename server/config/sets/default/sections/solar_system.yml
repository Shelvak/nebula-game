---
######
# Solar System configuration
######

# Maximum number of orbits where planets and asteroids can be. This is also
# maximum number of planets available, if you try to create more planets than
# there are orbits, generator will fail!
orbit.count: 3

# How much time does it take to go between points in orbit. 1 is normal hop
# time, 2 is double time, 0.5 is half time.
links.orbit.weight: 1 + 0.000001 * position
# How much time does it take to go between orbits.
links.parent.weight: 1 + 0.000002 * position
# How much time does it take to land to the planet. Does not support formulas!
links.planet.weight: 0.5

# How much time should jump from/to regular solar system take?
regular.jump.multiplier: 1.5
# How much time should jump from/to global battleground take?
battleground.jump.multiplier: 4

### Unit spawning
# Available strategies:
# - outer_circle: Spawn only in last circle of solar system, avoiding jumpgates.
# - random: Spawn anywhere in the solar system.

# Time range for spawning.
spawn.home.delay: [<%= 3.hours %> / speed, <%= 6.hours %> / speed]
# Maximum number of spots occupied by NPC units in SS.
spawn.home.max_spots: 8
# - [count_from, count_to, type, flank]
# count_from and count_to are formulas with:
# - counter: which time spawn is being done in this SS.
# - spot: which free spot is this?
#
# count numbers are inclusive.
spawn.home.units:
  - [2 + counter / spot, 6 + 3 * counter / spot, Dirac, 0]
  - [2 + counter / spot, 8 + 4 * counter / spot, Dirac, 1]
  - [1 + counter / 2 / spot, 3 + 3 * counter / 2 / spot, Thor, 0]
  - [2 + counter / spot, 5 + 5 * counter / 2 / spot, Thor, 1]
  - [0, 2 + counter / spot, Demosis, 0]
  - [0, 2 + counter / spot, Demosis, 1]
# Spawning strategy to use
spawn.home.strategy: outer_circle

spawn.regular.delay: [<%= 12.hours %> / speed, <%= 24.hours %> / speed]
spawn.regular.max_spots: 5
spawn.regular.units:
  - [4 + 2 * counter / spot, 8 + 4 * counter / spot, Dirac, 0]
  - [4 + 2 * counter / spot, 12 + 6 * counter / spot, Dirac, 1]
  - [2 + counter / spot, 6 + 3 * counter / spot, Thor, 0]
  - [4 + 2 * counter / spot, 8 + 4 * counter / spot, Thor, 1]
  - [2 + counter / spot, 6 + 3 * counter / spot, Demosis, 0]
  - [2 + counter / spot, 6 + 3 * counter / spot, Demosis, 1]
spawn.regular.strategy: random

spawn.mini_battleground.delay: [<%= 6.hours %> / speed, <%= 24.hours %> / speed]
spawn.mini_battleground.max_spots: 6
spawn.mini_battleground.units:
  - [5 + 2 * counter / spot, 10 + 5 * counter / spot, Dirac, 0]
  - [5 + 2 * counter / spot, 20 + 10 * counter / spot, Dirac, 1]
  - [5 + 2 * counter / spot, 10 + 5 * counter / spot, Thor, 0]
  - [5 + 2 * counter / spot, 15 + 7 * counter / spot, Thor, 1]
  - [1 + counter / 2 / spot, 8 + 4 * counter / spot, Demosis, 0]
  - [0 + counter / spot, 10 + 5 * counter / spot, Demosis, 1]
  - [0, 1 + counter / 50 / spot, ConvoyShip, 1]
spawn.mini_battleground.strategy: random

spawn.battleground.delay: [<%= 12.hours %> / speed, <%= 36.hours %> / speed]
spawn.battleground.max_spots: 1
spawn.battleground.units:
  - [1, 1, BossShip, 0]
  - [0, 3, ConvoyShip, 1]
  - [5 * counter, 15 * counter, Dirac, 0]
  - [15 * counter, 20 * counter, Dirac, 1]
  - [5 * counter, 10 * counter, Thor, 0]
  - [10 * counter, 15 * counter, Thor, 1]
  - [3 * counter, 8 * counter, Demosis, 0]
  - [1 * counter, 10 * counter, Demosis, 1]
spawn.battleground.strategy: outer_circle

