---
######
# Solar system object configuration
######

# Graphical size range of ss object (in percentage of main picture)
size: [25, 60]

# One step of asteroid rate values. Step 0.1 and range [1, 2] would mean 1, 1.1,
# 1.2, 1.3, 1.4, ..., 2
asteroid.rate_step: 0.1

# Asteroid resource ranges
asteroid.metal_rate: [1, 3]
rich_asteroid.metal_rate: [2, 6]
asteroid.energy_rate: [1, 3]
rich_asteroid.energy_rate: [2, 6]
asteroid.zetium_rate: [1, 3]
rich_asteroid.zetium_rate: [2, 6]

### Importance configuration

# Importance for resource tiles. Each resource tile adds this much importance
# points. Normally planet importance is: width * height
planet.ore.importance: 50
planet.geothermal.importance: 300
planet.zetium.importance: 180

# Importance for asteroids. Each resource rate unit adds this much importance
# points.
asteroid.metal.importance: 500
asteroid.energy.importance: 250
asteroid.zetium.importance: 750

# Importance for jumpgates
jumpgate.importance: [1700, 2100]
homeworld_jumpgate.importance: 3000

### Chances configuration

# Chance if ANY units will appear in sso orbit.
# This list is iterated top->down.
# First number is minimal sso importance needed.
# Second one is chance that units will spawn.
#
# So if:
#  - [800, 40]
#  - [1000, 50]
#  - [1200, 80]
# Then sso with 1100 importance will 50% chance, and
# sso with 900 importance will have 40% chance.
<%
  importance = (1025..2700)
  chance = (20..100)
  steps = 40 # Must be a multiple of chance diff.

  importance_diff = (importance.last - importance.first).to_f
  importance_step = (importance_diff / steps).ceil
  chance_diff = (chance.last - chance.first).to_f
  chance_step = (chance_diff / steps).floor

  chances = []
  steps.times do |step_index|
    chances.push [
      importance.first + step_index * importance_step,
      chance.first + step_index * chance_step
    ]
  end
%>

orbit.unit.chances: <%= chances.inspect %>
# These are for homeworld solar systems.
homeworld.orbit.unit.chances:
  - [0, 100]

### Orbit units configuration

# If sso has orbit units, this will define what units it will have.
# In this list all units which satisfy minimal importance have a chance
# to be created.
# [min importance, chance, unit type, flank]
orbit.units:
  - [2700, 100, demosis, 0]
  - [2700, 20, demosis, 0]
  - [2500, 100, demosis, 0]
  - [2300, 30, demosis, 0]
  - [2100, 30, demosis, 1]

  - [2100, 50, thor, 1]
  - [2000, 30, thor, 0]
  - [2000, 30, thor, 0]
  - [1700, 100, thor, 0]
  - [1600, 100, thor, 0]
  - [1500, 50, thor, 0]
  - [1400, 30, thor, 1]

  - [1250, 40, thor, 0]
  - [1250, 70, dirac, 0]
  - [1250, 70, dirac, 1]

  - [1100, 100, dirac, 0]
  - [1100, 100, dirac, 1]

  - [1025, 50, dirac, 0]
  - [1025, 100, dirac, 0]
  - [1025, 50, dirac, 1]
  - [1025, 100, dirac, 1]

# Same as above just for homeworld solar systems.
homeworld.orbit.units:
  - [3000, 100, thor, 0]
  - [3000, 100, thor, 0]
  - [3000, 100, thor, 1]
  - [1350, 100, dirac, 0]
  - [1350, 100, dirac, 1]
  - [1300, 100, dirac, 1]
  - [1250, 100, dirac, 1]
  - [1100, 100, dirac, 0]
  - [1100, 100, dirac, 1]
  - [1025, 100, dirac, 0]
  - [1025, 100, dirac, 1]