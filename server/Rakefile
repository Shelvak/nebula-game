require 'rubygems'
require 'rake'
require 'rake/clean'
#require 'rdoc/task'

#Rake::RDocTask.new do |rdoc|
#  files =['README', 'LICENSE', 'lib/**/*.rb']
#  rdoc.rdoc_files.add(files)
#  rdoc.main = "README" # page to start on
#  rdoc.title = "space_server Docs"
#  rdoc.rdoc_dir = 'doc/rdoc' # rdoc output folder
#  rdoc.options << '--line-numbers'
#end

class TemplatesBuilder
  TEMPLATE_DIR = File.join(File.dirname(__FILE__), 'tasks', 'templates')

  def self.read_template(name, params={})
    content = File.read(File.join(TEMPLATE_DIR, name))
    params.each do |key, value|
      content.gsub!(key, value)
    end

    content
  end
end

task :environment do
  require File.expand_path(File.dirname(__FILE__) + "/lib/initializer.rb")
end

def run(*args)
  status = system(*args)
  unless $?.success?
    cmd = args.map(&:inspect).join(" ")
    puts
    puts "Running `#{cmd}` failed with exit status #{$?.exitstatus}!"
    exit
  end
  status
end

class File
  def self.modify(name)
    modified = yield File.read(name)
    File.open(name, "w") do |file|
      file.write(modified)
    end
  end
end

def check_for_production!
  if App.in_production? && ENV["IM_SURE"] != "1"
    puts
    puts "Hey, dude, you are in PRODUCTION!"
    puts
    puts "Are you really really sure you want to invoke this?"
    puts
    puts "Pass IM_SURE=1 to proceed."
    puts
    exit
  end
end

# Load tasks located in tasks/*.rake
Dir.glob(File.dirname(__FILE__) + "/tasks/*.rake").each { |file| load file }
