<?xml version="1.0" encoding="utf-8"?>
<base:BaseContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                    xmlns:base="components.base.*"
                    xmlns:s="library://ns.adobe.com/flex/spark" 
                    xmlns:mx="library://ns.adobe.com/flex/mx"
                    creationComplete="basecontainer1_creationCompleteHandler(event)">
   
   <fx:Script>
      <![CDATA[
         import com.developmentarc.core.utils.EventBroker;
         
         import config.Config;
         
         import globalevents.GlobalEvent;
         
         import models.parts.events.UpgradeEvent;
         import models.resource.ResourceType;
         import models.technology.Technology;
         
         import mx.events.FlexEvent;
         
         import utils.DateUtil;
         import utils.Localizer;
         import utils.assets.AssetNames;
         
         [Bindable]
         private var _researchModel: Technology;
         
         public function set researchModel(value: Technology): void
         {
            removeModelEventListeners();
            _researchModel = value;
            if (value)
            {
               addModelEventListeners();
            }
         }
         
         override protected function updateDisplayList(uw:Number, uh:Number) : void
         {
            super.updateDisplayList(uw, uh);
            
            if (!_researchModel || !_researchModel.upgradePart || !researchBar)
            {
               return;
            }
            
            if (_researchModel.pauseRemainder != 0 || (_researchModel.upgradePart.upgradeEndsAt != null
            && _researchModel.upgradePart.upgradeStarted != null))
            {
               researchBar.setProgress(_researchModel.upgradePart.upgradeProgress, 1);
            }
         }
         
         protected function addModelEventListeners() : void
         {
            _researchModel.upgradePart.addEventListener(
               UpgradeEvent.UPGRADE_PROGRESS,
               model_upgradeProgressHandler
            );
            _researchModel.upgradePart.addEventListener(
               UpgradeEvent.UPGRADE_STOPPED,
               model_upgradeProgressHandler
            );
         }
         
         private function model_upgradeProgressHandler(e:UpgradeEvent) : void
         {
            invalidateDisplayList();
         }
         
         private function removeModelEventListeners(e: GlobalEvent = null): void
         {
            if (_researchModel && _researchModel.upgradePart)
            {
               _researchModel.upgradePart.removeEventListener(
                  UpgradeEvent.UPGRADE_PROGRESS,
                  model_upgradeProgressHandler
               );
               _researchModel.upgradePart.removeEventListener(
                  UpgradeEvent.UPGRADE_STOPPED,
                  model_upgradeProgressHandler
               );
            }
         }
         
         protected function basecontainer1_creationCompleteHandler(event:FlexEvent):void
         {
            EventBroker.subscribe(GlobalEvent.APP_RESET, removeModelEventListeners);
         }
         
      ]]>
   </fx:Script>
   <s:Group left="0" right="0">
      <mx:Image source="{IMG.getBitmapAsset(AssetNames.getTechnologyImageName(_researchModel.type))}" width="32" height="32" 
                maintainAspectRatio="true" left="6" verticalCenter="0"/>
      <s:Group left="43" right="3"> 
         <s:Label text="{_researchModel.title}"/>
         <mx:ProgressBar id="researchBar" width="100%" labelPlacement="center" mode="manual"
                         label="{_researchModel.scientists == 0?
                         Localizer.string('Technologies','paused'):
                         Localizer.string('Technologies','finishedIn', [
                         _researchModel.upgradePart.timeToFinishString])}"/>
         <base:ImageAndLabel type="{ResourceType.SCIENTISTS}" 
                             textToDisplay="{_researchModel.scientists.toString()}"
                             visible="{_researchModel.scientists != 0}"/>
         <s:layout>
            <s:VerticalLayout gap="1"/>
         </s:layout>
      </s:Group>
   </s:Group>
</base:BaseContainer>
