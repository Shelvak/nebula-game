<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:screens="components.screens.*"
         xmlns:base="components.base.*"
         width="100%" height="100%">
   <fx:Script>
      <![CDATA[
      import controllers.playeroptions.PlayerOptionsCommand;
      import controllers.ui.NavigationController;

      import models.player.PlayerOptions;

      import mx.collections.ArrayCollection;

      import utils.locale.Localizer;

      private var NC: NavigationController = NavigationController.getInstance();
      
      private function getString(prop: String): String
      {
         return Localizer.string('PlayerOptions', prop);
      }

      private function saveClickHandler(e: MouseEvent): void
      {
         PlayerOptions.hasChanges = false;
         new PlayerOptionsCommand(PlayerOptionsCommand.SET).dispatch();
      }
      ]]>
   </fx:Script>
   <base:Scroller id="scroller" left="0" right="0" top="0" bottom="9" 
                  stepMultiplier="15">
      <s:Group left="0" right="0">
         <s:Group width="900" horizontalCenter="0">
            <s:Group width="50%">
               <base:Panel title="{getString('title.genericOptions')}">
                  <s:CheckBox id="warnBeforeUnload"
                              label="{getString('label.warnBeforeUnload')}"
                              selected="{PlayerOptions.warnBeforeUnload}"
                              click="PlayerOptions.changed();
                              PlayerOptions.warnBeforeUnload = !PlayerOptions.warnBeforeUnload"/>
                 <base:layout>
                   <s:VerticalLayout horizontalAlign="justify"
                                     paddingTop="10"
                                     paddingBottom="10"
                                     gap="10" paddingLeft="10"/>
                 </base:layout>
               </base:Panel>
               <base:Panel title="{getString('title.afterLoginOptions')}">
                  <s:CheckBox id="showPopups" label="{getString('label.showPopupsAfterLogin')}"
                              selected="{PlayerOptions.showPopupsAfterLogin}"
                              click="PlayerOptions.changed();
                              PlayerOptions.showPopupsAfterLogin = !PlayerOptions.showPopupsAfterLogin"/>
                  <s:CheckBox id="openPlanet" label="{getString('label.openFirstPlanet')}"
                              selected="{PlayerOptions.openFirstPlanetAfterLogin}"
                              click="PlayerOptions.changed();
                              PlayerOptions.openFirstPlanetAfterLogin = !PlayerOptions.openFirstPlanetAfterLogin"/>
                 <base:layout>
                   <s:VerticalLayout horizontalAlign="justify"
                                     paddingTop="10"
                                     paddingBottom="10"
                                     gap="10" paddingLeft="10"/>
                 </base:layout>
               </base:Panel>
               <s:layout>
                  <s:VerticalLayout horizontalAlign="justify"
                                    paddingBottom="10"
                                    gap="10" paddingLeft="10"/>
               </s:layout>
            </s:Group>
            <base:Panel width="50%" title="{getString('title.chatOptions')}"
              enabled="false" alpha="0.2">
              <s:CheckBox id="showJoinLeave" label="{getString('label.showJoinLeave')}"
                          selected="{PlayerOptions.chatShowJoinLeave}"
                          click="PlayerOptions.changed();
                              PlayerOptions.chatShowJoinLeave = !PlayerOptions.chatShowJoinLeave"/>
              <s:Label text="{getString('label.ignoredList')}"/>
              <s:DataGroup dataProvider="{PlayerOptions.ignoredPlayersDataProvider}"
                           visible="{PlayerOptions.ignoredPlayersDataProvider.length > 0}"
                           includeInLayout="{
                            PlayerOptions.ignoredPlayersDataProvider.length > 0}">
                <s:itemRenderer><fx:Component>
                  <s:ItemRenderer autoDrawBackground="false">
                    <s:Label text="{data}" />
                  </s:ItemRenderer>
                </fx:Component></s:itemRenderer>
                <s:layout>
                  <s:VerticalLayout paddingLeft="6"/>
                </s:layout>
              </s:DataGroup>
              <s:Label color="#eec500" text="{getString('label.ignoredListEmpty')}"
                       visible="{PlayerOptions.ignoredPlayersDataProvider.length == 0}"
                       includeInLayout="{
                            PlayerOptions.ignoredPlayersDataProvider.length == 0}"/>
              <s:Group>
                <s:TextInput width="200"/>
                <s:Button label="{getString('label.addIgnoredPlayer')}"/>
                <s:layout>
                  <s:HorizontalLayout/>
                </s:layout>
              </s:Group>
               <base:layout>
                  <s:VerticalLayout paddingTop="10"
                                    paddingBottom="10"
                                    gap="10" paddingLeft="10"/>
               </base:layout>
            </base:Panel>
            <s:layout>
               <s:HorizontalLayout paddingTop="20"
                                   paddingBottom="10"
                                   gap="10"/>
            </s:layout>
         </s:Group>
      </s:Group>
   </base:Scroller>
   <s:Group right="0" bottom="0">
     <s:layout>
       <s:HorizontalLayout gap="20" verticalAlign="middle"/>
     </s:layout>
      <s:Button skinClass="components.skins.GreenButtonSkin"
                label="{getString('label.save')}"
                enabled="{PlayerOptions.hasChanges}"
                click="saveClickHandler(event)"/>
      <screens:ScreenCloseButton label="{Localizer.string('Players', 'label.close')}"
                                 click="NC.showPreviousScreen()"
                                 scroller="{scroller}"/>
   </s:Group>
</s:Group>