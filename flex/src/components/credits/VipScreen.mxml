<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
         width="100%" height="100%" 
         xmlns:credits="components.credits.*" 
         xmlns:base="components.base.*" xmlns:screens="components.screens.*">
   <fx:Script>
      <![CDATA[
      import components.popups.ActionConfirmationPopUp;
      import components.popups.WaitingCredsPopUp;

      import controllers.players.PlayersCommand;
      import controllers.ui.NavigationController;

      import flashx.textLayout.formats.TextAlign;

      import models.ModelLocator;
      import models.credit.VipLevelsData;

      import utils.MathUtil;
      import utils.StringUtil;
      import utils.locale.Localizer;


      private static function get ML(): ModelLocator {
         return ModelLocator.getInstance();
      }

      private static function get NAV_CTRL(): NavigationController {
         return NavigationController.getInstance();
      }

      private function getString(property: String,
                                 parameters: Array = null): String {
         return Localizer.string("Credits", property, parameters);
      }

      private function order_clickHandler(e: Event): void {
         var cost: int = VipLevelsData.getVipCost(
            int(VipLevelsData.vipSelection.selectedValue));

         function getVip(): void {
            new PlayersCommand(PlayersCommand.VIP,
                               {'vipLevel': VipLevelsData.getSelectedLevel()}).dispatch();
         }

         if (cost > ML.player.creds) {
            WaitingCredsPopUp.showPopUp(cost, getVip);
         }
         else {
            getVip();
         }
      }


      protected function button1_clickHandler(event: MouseEvent): void {
         var popUp: ActionConfirmationPopUp = new ActionConfirmationPopUp();
         popUp.confirmButtonLabel = Localizer.string('Popups', 'label.yes');
         popUp.cancelButtonLabel = Localizer.string('Popups', 'label.no');
         var lbl: Label = new Label();
         lbl.minWidth = 300;
         lbl.text = Localizer.string('Popups', 'message.convertCreds',
                                     [
                                        credSelector.value,
                                        VipLevelsData.getVipConvertedCreds(
                                           ML.player.vipLevel,
                                           credSelector.value)
                                     ]);
         popUp.addElement(lbl);
         popUp.title = Localizer.string('Popups', 'title.convertCreds');
         popUp.confirmButtonClickHandler = function (button: Button = null): void {
            new PlayersCommand(PlayersCommand.CONVERT_CREDS,
                               {'amount': credSelector.value}).dispatch();
            credSelector.value = 0;
         };
         popUp.show();
      }
      ]]>
   </fx:Script>
   <screens:GradientBackground gradientWidth="{(width - header.width) / 2}"/>
   <base:Panel horizontalCenter="0" skinClass="components.skins.LargePanelSkin"
               title="{getString('title.vip')}"
               top="10"
               visible="{ML.player.vipLevel != 0}">
      <base:AdvancedContainer left="0" right="0">
         <base:layout>
            <s:VerticalLayout horizontalAlign="center"/>
         </base:layout>
         <s:Label text="{getString('label.currentVipLvl', [ML.player.vipLevel])}"
                  fontSize="16" paddingTop="12" paddingLeft="5" paddingBottom="10"
                  fontWeight="bold"/>
         <s:Group>
            <s:Group toolTip="{getString('tooltip.nextVipTick')}">
               <s:Label text="{getString('label.nextVipTick') + ':'}" 
                        width="{int(Localizer.string('MainMenu', 'panelWidth'))}" 
                        color="{ML.player.hasNextVipTick ? 0xeec500:0x636363}"/>
               <s:Label text="{ML.player.hasNextVipTick ? ML.player.vipCredsTime:'---'}"
                        color="{ML.player.hasNextVipTick ? 0xffffff:0x636363}"/>
               <s:layout>
                  <s:HorizontalLayout paddingLeft="6" paddingTop="6"/>
               </s:layout>
            </s:Group>
            <s:Group>
               <s:Label text="{getString('label.vipEndsIn') + ':'}" 
                        width="{int(Localizer.string('MainMenu', 'panelWidth'))}"  
                        color="{ML.player.vipLevel > 0?0xeec500:0x636363}"/>
               <s:Label text="{ML.player.vipLevel > 0?ML.player.vipTime:'---'}"
                        color="{ML.player.vipLevel > 0?0xffffff:0x636363}"/>
               <s:layout>
                  <s:HorizontalLayout paddingLeft="6" paddingTop="3"/>
               </s:layout>
            </s:Group>
            <s:Group>
               <s:Label text="{getString('label.vipCreds') + ':'}" 
                        width="{int(Localizer.string('MainMenu', 'panelWidth'))}"
                        color="{ML.player.vipLevel > 0?0xeec500:0x636363}"/>
               <s:Label text="{(ML.player.vipLevel > 0?ML.player.vipCreds:'---') + ' / ' + 
                        (ML.player.vipLevel > 0
                        ?VipLevelsData.getVipDailyBonus(ML.player.vipLevel)
                        :'---')}"
                        color="{ML.player.vipLevel > 0?0xffffff:0x636363}"/>
               <s:layout>
                  <s:HorizontalLayout paddingLeft="6" paddingTop="10"/>
               </s:layout>
            </s:Group>
            <s:Group>
               <s:Label text="{StringUtil.firstToUpperCase(getString('label.creds')) + ':'}" 
                        width="{int(Localizer.string('MainMenu', 'panelWidth'))}"
                        color="#eec500"/>
               <s:Label text="{ML.player.creds - ML.player.vipCreds}"/>
               <s:layout>
                  <s:HorizontalLayout paddingLeft="6" paddingTop="3"/>
               </s:layout>
            </s:Group>
            <s:Group visible="{ML.player.vipLevel > 0}">
               <s:Label text="{StringUtil.firstToUpperCase(getString('label.credsSum')) + ':'}" 
                        width="{int(Localizer.string('MainMenu', 'panelWidth'))}"
                        color="#eec500"/>
               <s:Label text="{ML.player.creds}"/>
               <s:layout>
                  <s:HorizontalLayout paddingLeft="6" paddingTop="3"/>
               </s:layout>
            </s:Group>
            <s:layout>
               <s:VerticalLayout gap="1" paddingTop="6" paddingBottom="13"/>
            </s:layout>
         </s:Group>
         <base:Warning text="{getString('warning.notEnoughVipCreds',
                       [Math.ceil(VipLevelsData.getVipConvertRate(
                       ML.player.vipLevel))])}"
                       visible="{ML.player.vipCreds &lt; VipLevelsData.getVipConvertRate(
                       ML.player.vipLevel)}"
                       width="100%"/>
         <s:Label fontSize="14" color="#eec500" 
                  text="{getString('label.convertRate', 
                  [MathUtil.round(VipLevelsData.getVipConvertRate(
                  ML.player.vipLevel),1)])}" 
                  visible="{ML.player.vipCreds >= VipLevelsData.getVipConvertRate(
                  ML.player.vipLevel)}"/>
         <s:Group
            visible="{ML.player.vipCreds >= VipLevelsData.getVipConvertRate(
            ML.player.vipLevel)}">
            <s:Label text="0"/>
            <s:HSlider width="250" minimum="0" maximum="{ML.player.vipCreds}"
                       id="credSelector" stepSize="1"/>
            <s:Label text="{ML.player.vipCreds}"/>
            <s:layout>
               <s:HorizontalLayout verticalAlign="middle"/>
            </s:layout>
         </s:Group>
         <s:Label fontSize="14" color="#eec500" text="{getString('label.selectedConvert',
                  [credSelector.value, VipLevelsData.getVipConvertedCreds(
                  ML.player.vipLevel, credSelector.value)])}"
                  visible="{ML.player.vipCreds >= VipLevelsData.getVipConvertRate(
                  ML.player.vipLevel)}"/>
         <s:Group
            visible="{ML.player.vipCreds >= VipLevelsData.getVipConvertRate(
            ML.player.vipLevel)}">
            <s:Button skinClass="components.skins.GreenButtonSkin" 
                      label="{getString('label.convert')}"
                      click="button1_clickHandler(event)"
                      top="12"
                      enabled="{credSelector.value >= VipLevelsData.getVipConvertRate(
                      ML.player.vipLevel)}"/>
         </s:Group>
      </base:AdvancedContainer>
   </base:Panel>
   <base:Panel horizontalCenter="0" skinClass="components.skins.LargePanelSkin"
               title="{getString('title.becomeVIP')}" top="10"
               visible="{ML.player.vipLevel == 0}">
      
      <s:Label text="{getString('label.becomeVIP')}" 
               fontSize="14" paddingTop="20" paddingLeft="5" paddingBottom="10"/>
      
      <s:Group height="100%">
         <credits:VipHeader id="header"/>
         <base:Scroller left="0" right="0" top="{header.height}" bottom="0" stepMultiplier="10">
            <s:Group left="0" right="0">
               <s:DataGroup dataProvider="{VipLevelsData.getDataProvider()}"
                            itemRenderer="components.credits.IRVipRow">
                  <s:layout>
                     <s:VerticalLayout gap="0"/>
                  </s:layout>
               </s:DataGroup>
            </s:Group>
         </base:Scroller>    
      </s:Group>

      <s:Group width="100%">
         <s:Label text="{getString('label.additionalPrivileges')}" fontSize="14"
                 color="#eec500" fontWeight="bold"/>
         <s:Label text="{getString('label.additionalPrivileges.queueBuilding')}"
                  fontSize="13" paddingLeft="12"/>
         <s:Label text="{getString('label.additionalPrivileges.buildAllEntries')}"
                  fontSize="13" paddingLeft="12"/>
         <s:Label text="{getString('label.additionalPrivileges.repairAllTurrets')}"
                  fontSize="13" paddingLeft="12"/>
         <s:layout>
            <s:VerticalLayout paddingLeft="3" horizontalAlign="justify"
                    paddingTop="10"/>
         </s:layout>
      </s:Group>

      <s:Group width="100%">
         <base:Warning text="{getString('warning.becomeVIP')}"
                       paddingTop="20" horizontalCenter="0" width="90%"
                       warningTextAlign="{TextAlign.LEFT}"
                       warningSignVerticalCenter="false"/>
      </s:Group>
      <s:Group width="{header.width}">
         <s:Button label="{VipLevelsData.getSelectedLevel() > 0
                   ?
                   ( VipLevelsData.getVipCost(
                   int(VipLevelsData.vipSelection.selectedValue))
                   > ML.player.creds
                   ? getString('label.buy')
                   : getString('label.order'))
                   : getString('label.order')}"
                   enabled="{VipLevelsData.vipSelection.selectedValue > 0}"
                   click="order_clickHandler(event)" 
                   skinClass="components.skins.CreditButtonSkin"/>
         <s:layout>
            <s:HorizontalLayout horizontalAlign="right" paddingTop="20" gap="10"/>
         </s:layout>
      </s:Group>
      <base:layout>
         <s:VerticalLayout/>
      </base:layout>
   </base:Panel>
   <screens:ScreenCloseButton right="0" bottom="0" click="NAV_CTRL.showPreviousScreen()"
                              label="{getString('label.close')}"/>
</s:Group>
