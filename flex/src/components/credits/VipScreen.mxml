<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
         width="100%" height="100%" 
         xmlns:credits="components.credits.*" 
         xmlns:base="components.base.*" xmlns:screens="components.screens.*">
   <fx:Script>
      <![CDATA[
         import components.popups.WaitingCredsPopup;
         import components.skins.CreditButtonSkin;
         
         import controllers.GlobalFlags;
         import controllers.players.PlayersCommand;
         import controllers.ui.NavigationController;
         
         import flashx.textLayout.formats.TextAlign;
         
         import models.ModelLocator;
         import models.credit.VipLevelsData;
         
         import utils.locale.Localizer;
         
         
         private static function get ML() : ModelLocator {
            return ModelLocator.getInstance();
         }
         
         private static function get NAV_CTRL() : NavigationController {
            return NavigationController.getInstance();
         }
         
         private function getString(property:String, parameters:Array = null) : String {
            return Localizer.string("Credits", property, parameters);
         }
         
         private function order_clickHandler(e: Event): void
         {
            var cost: int = VipLevelsData.getVipCost(
               int(VipLevelsData.vipSelection.selectedValue));
            function getVip(): void
            {
               GlobalFlags.getInstance().lockApplication = true;
               new PlayersCommand(PlayersCommand.VIP, 
                  {'vipLevel': VipLevelsData.getSelectedLevel()}).dispatch();
               NAV_CTRL.showPreviousScreen();
            }
            if (cost > ML.player.creds)
            {
               WaitingCredsPopup.showPopup(cost, getVip);
            }
            else
            {
               getVip();
            }
         }
      ]]>
   </fx:Script>
   <screens:GradientBackground gradientWidth="{(width - header.width) / 2}"/>
   <base:Panel horizontalCenter="0" skinClass="components.skins.LargePanelSkin"
               title="{getString('title.becomeVIP')}">
      
      <s:Label text="{getString('label.becomeVIP')}" 
               fontSize="14" paddingTop="20" paddingLeft="5" paddingBottom="10"/>
      
      <s:Group height="100%">
         <credits:VipHeader id="header"/>
         <base:Scroller left="0" right="0" top="{header.height}" bottom="0" stepMultiplier="10">
            <s:Group left="0" right="0">
               <s:DataGroup dataProvider="{VipLevelsData.getDataProvider()}"
                            itemRenderer="components.credits.IRVipRow">
                  <s:layout>
                     <s:VerticalLayout gap="0"/>
                  </s:layout>
               </s:DataGroup>
            </s:Group>
         </base:Scroller>    
      </s:Group>
      
      <s:Group width="100%">
         <base:Warning text="{getString('warning.becomeVIP')}"
                       paddingTop="20" horizontalCenter="0" width="90%"
                       warningTextAlign="{TextAlign.LEFT}"
                       warningSignVerticalCenter="false"/>
      </s:Group>
      <s:Group width="{header.width}">
         <s:Button label="{VipLevelsData.getSelectedLevel() > 0
                   ?
                   ( VipLevelsData.getVipCost(
                   int(VipLevelsData.vipSelection.selectedValue))
                   > ML.player.creds
                   ? getString('label.buy')
                   : getString('label.order'))
                   : getString('label.order')}"
                   enabled="{VipLevelsData.vipSelection.selectedValue > 0}"
                   click="order_clickHandler(event)" 
                   skinClass="components.skins.CreditButtonSkin"/>
         <s:layout>
            <s:HorizontalLayout horizontalAlign="right" paddingTop="20" gap="10"/>
         </s:layout>
      </s:Group>
      <base:layout>
         <s:VerticalLayout/>
      </base:layout>
   </base:Panel>
   <screens:ScreenCloseButton right="0" bottom="0" click="NAV_CTRL.showPreviousScreen()"
                              label="{getString('label.close')}"/>
</s:Group>
