<?xml version="1.0" encoding="utf-8"?>
<screen:ScreenContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                        xmlns:s="library://ns.adobe.com/flex/spark" 
                        xmlns:mx="library://ns.adobe.com/flex/mx"
                        width="100%" height="100%" 
                        xmlns:screen="components.base.screen.*">
   <fx:Script>
      <![CDATA[
         import components.buildingselectedsidebar.BuildingSelectedSidebar;
         import components.buildingsidebar.BuildingSidebar;
         import components.foliage.CFoliageSidebar;
         import components.healing.HealingSidebar;
         import components.market.MarketSidebar;
         import components.technologytree.TechnologySelectedSidebar;
         import components.technologytree.TechnologySidebar;
         import components.unitsscreen.loadunload.LoadUnloadSidebar;
         import components.unitsscreen.simple.UnitsSelectedSidebar;
         
         import controllers.navigation.MCSidebar;
         import controllers.screens.SidebarScreens;
         
         import models.events.ScreensSwitchEvent;
         
         private var created: Boolean = false;
         
         protected override function addEventListeners():void
         {
            SD.addEventListener(ScreensSwitchEvent.SCREEN_CHANGED, createContent);
         }
         
         private function createContent(e: ScreensSwitchEvent): void
         {
            if (SD.currentName != screenName)
            {
               this.visible = false;
               return;
            }
            else
            {
               this.visible = true;
            }
            if (!created)
            {
               created = true;
               switch (screenName)
               {
                  case SidebarScreens.EMPTY:
                     break;
                  case SidebarScreens.CONSTRUCTION:
                     addElement(new BuildingSidebar());
                     break;
                  case SidebarScreens.TECH_TREE_INFO:
                     addElement(new TechnologySelectedSidebar());
                     break;
                  case SidebarScreens.TECH_TREE_BASE:
                     addElement(new TechnologySidebar());
                     break;
                  case SidebarScreens.BUILDING_SELECTED:
                     addElement(new BuildingSelectedSidebar());
                     break;
                  case SidebarScreens.BLOCKING_FOLLIAGE:
                     addElement(new CFoliageSidebar());
                     break;
                  case SidebarScreens.UNITS_ACTIONS:
                     addElement(new UnitsSelectedSidebar());
                     break;
                  case SidebarScreens.LOAD_UNLOAD:
                     addElement(new LoadUnloadSidebar());
                     break;
                  case SidebarScreens.HEAL:
                     addElement(new HealingSidebar());
                     break;
                  case SidebarScreens.MARKET:
                     addElement(new MarketSidebar());
                     break;
               }
            }
         }
         
         [Bindable]
         private var SD: MCSidebar = MCSidebar.getInstance();
      ]]>
   </fx:Script>
</screen:ScreenContainer>