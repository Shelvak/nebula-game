<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:base="components.base.*" xmlns:ratings="components.ratings.*"
                autoDrawBackground="false">
   <fx:Script>
      <![CDATA[
      import components.popups.ErrorPopUp;
      import components.ratings.RatingsWidths;

      import controllers.alliances.AlliancesCommand;
      import controllers.alliances.actions.GiveAwayActionParams;
      import controllers.ui.NavigationController;

      import models.ModelLocator;
      import models.player.MRatingPlayer;
      import models.player.PlayerMinimal;

      import spark.components.PopUpAnchor;

      import utils.assets.AssetNames;
      import utils.assets.ImagePreloader;
      import utils.locale.Localizer;


      [Bindable]
      private var player: MRatingPlayer;

      public override function set data(value: Object): void {
         player = MRatingPlayer(value);
      }

      public override function get data(): Object {
         return player;
      }

      [Bindable]
      private var ML: ModelLocator = ModelLocator.getInstance();

      private function setupPopupButtons(popup: ErrorPopUp): void {
         popup.retryButtonLabel = Localizer.string('Popups', 'label.yes');
         popup.cancelButtonLabel = Localizer.string('Popups', 'label.no');
         popup.showCancelButton = true;
         popup.showRetryButton = true;
      }

      private function btnKick_clickHandler(event: MouseEvent): void {
         var popUp: ErrorPopUp = new ErrorPopUp();
         setupPopupButtons(popUp);
         popUp.message = Localizer.string('Popups', 'message.kick',
                                          [data.name]);
         popUp.title = Localizer.string('Popups', 'title.kick');
         popUp.retryButtonClickHandler =
            function (button: Button = null): void {
               new AlliancesCommand(
                  AlliancesCommand.KICK, {'playerId': data.id}
               ).dispatch();
               new AlliancesCommand(
                  AlliancesCommand.SHOW, {'id': ML.player.allianceId}
               ).dispatch();
            };
         popUp.show();
      }

      private function btnTransferOwnership_clickHandler(event: MouseEvent): void {
         const popup: ErrorPopUp = new ErrorPopUp();
         popup.title = Localizer.string(
            "Alliances", "giveAway.title.confirmationPopup"
         );
         popup.message = Localizer.string(
            "Alliances", "giveAway.message.confirmationPopup", [player.name]
         );
         setupPopupButtons(popup);
         popup.retryButtonClickHandler =
            function (button: Button = null): void {
               new AlliancesCommand(
                  AlliancesCommand.GIVE_AWAY,
                  new GiveAwayActionParams(
                     new PlayerMinimal(player.id, player.name)
                  )
               ).dispatch();
            };
         popup.show();
      }
      ]]>
   </fx:Script>
   <s:Rect left="0" right="0" top="0" bottom="0">
      <s:fill>
         <s:SolidColor color="{itemIndex%2==0?0x0e0e0e:0x141414}"/>
      </s:fill>
   </s:Rect>
   <s:Group top="3" bottom="3">
      <s:layout>
         <s:HorizontalLayout gap="1" verticalAlign="middle"/>
      </s:layout>
      <s:Label text="{player.rank}" width="{RatingsWidths.rank}" textAlign="center"/>
      <base:AdvancedContainer width="{RatingsWidths.player}"
                              toolTipCreate="player.createStatusTooltip(event)"
                              toolTip=" ">
         <s:BitmapImage source="{ImagePreloader.getInstance().getImage(
                        AssetNames.getIconImageName(player.online?'online':'offline'))}"/>
         <s:Button label="{player.name}" width="100%" skinClass="components.skins.LinkButtonSkin"
                   click="NavigationController.getInstance().showPlayer(player.id)"/>
         <base:layout>
            <s:HorizontalLayout verticalAlign="middle" paddingLeft="6" paddingRight="3"/>
         </base:layout>
      </base:AdvancedContainer>
      <s:Group width="{RatingsWidths.vipStatus}">
         <s:BitmapImage source="{ImagePreloader.getInstance().getImage(
            AssetNames.getIconImageName('vipPlayer'))}"
            visible="{player.vip}" horizontalCenter="0"/>
      </s:Group>
      <s:Label text="{player.economyPoints}" width="{RatingsWidths.economyPoints}" 
               textAlign="center"/>
      <s:Label text="{player.sciencePoints}" width="{RatingsWidths.sciencePoints}" 
               textAlign="center"/>
      <s:Label text="{player.armyPoints}" width="{RatingsWidths.armyPoints}" 
               textAlign="center"/>
      <s:Label text="{player.warPoints}" width="{RatingsWidths.warPoints}" 
               textAlign="center"/>
      <ratings:DeathOrVPLabel player="{player}"/>
      <s:Label text="{player.allianceVps}" width="{RatingsWidths.allianceVictoryPoints}" 
               textAlign="center"/>
      <s:Label text="{player.points}" width="{RatingsWidths.points}" 
               textAlign="center"/>
      <s:Group width="{RatingsWidths.action}" 
               visible="{player.allianceOwnerId == ML.player.id 
               &amp;&amp; ML.player.id != player.id}">
         <s:layout>
            <s:HorizontalLayout gap="5" horizontalAlign="center"/>
         </s:layout>
         <s:Button id="btnKick"
            label="{Localizer.string('Alliances', 'label.kick')}"
            click="btnKick_clickHandler(event)"/>
         <s:Button id="btnTransferOwnership"
            label="{Localizer.string('Alliances', 'giveAway.label.actionButton')}"
            click="btnTransferOwnership_clickHandler(event)"/>
      </s:Group>
   </s:Group>
</s:ItemRenderer>
