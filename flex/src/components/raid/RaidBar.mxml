<?xml version="1.0" encoding="utf-8"?>
<base:BaseContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    xmlns:base="components.base.*"
                    xmlns:battle="components.battle.*"
                    width="{barGroup.width}">
   <fx:Script>
      <![CDATA[
      import models.planet.MPlanet;
      import models.resource.ResourceType;
      import models.time.MTimeEventFixedMoment;

      import mx.events.EffectEvent;

      import utils.DateUtil;
      import utils.assets.AssetNames;
      import utils.locale.Localizer;

      private static const DURATION_TIME:int = 100;

      protected function shorten_effectEndHandler(event:EffectEvent):void {
         infoPanel.visible = false;
      }


      protected function widen_effectStartHandler(event:EffectEvent):void {
         infoPanel.visible = true;
      }

      [Bindable]
      private var addPlanet:int = 1;

      protected function shorten_effectStartHandler(event:EffectEvent):void {
         if (nextGroup.x < background.width) {
            switchTo.play([nextGroup], true);
            addPlanet = 1;
         }
      }

      private function getDays(toDate:Date, fromDate: Date): int {
         return Math.round((toDate.time - fromDate.time) /
                 (1000 * 60 * 60 * 24));
      }
      ]]>
   </fx:Script>
   
   <fx:Declarations>
      <s:Resize id="widen" heightTo="{background.height + 8}"
                duration="{DURATION_TIME}" effectStart="widen_effectStartHandler(event)"/>
      
      <s:Resize id="shorten" heightTo="0" effectStart="shorten_effectStartHandler(event)"
                duration="{DURATION_TIME}" effectEnd="shorten_effectEndHandler(event)"/>
      
      <s:Move id="switchTo" xFrom="{background.width}" xTo="0" duration="{DURATION_TIME}" target="{nextGroup}"/>
      
      <s:Fade id="fadeIn" duration="{DURATION_TIME}"/>
      <s:Fade id="fadeOut" duration="{DURATION_TIME}"/>
   </fx:Declarations>
   <s:Group mouseEnabledWhereTransparent="true">
      <s:Group width="{background.width}" height="0" id="infoPanel"
               visible="false" clipAndEnableScrolling="true"
               rollOver="{shorten.stop(); fadeOut.stop(); widen.play([infoPanel]); fadeIn.play([infoPanel])}"
               rollOut="{widen.stop(); fadeIn.stop();  shorten.play([infoPanel]); fadeOut.play([infoPanel])}">
         <!-- content rect background -->
         <s:Group width="100%" height="100%">
            <s:BitmapImage id="background" source="{IMG.getImage(AssetNames.UI_IMAGES_FOLDER + 'raiders_bar')}"/>
            <s:Label left="48" top="7" fontSize="12" fontWeight="bold" color="#f4c300" 
                     text="{Localizer.string('Units', 'label.incomingRaiders')}"
                     right="32" textAlign="center"/>
            <s:Button skinClass="components.skins.RightButtonSkin"
                      right="12" top="2"
                      click="switchTo.play([nextGroup])"/>
            
            <s:Group top="25" left="10" right="10">
               <s:Label fontSize="12" fontWeight="bold" 
                        text="{ML.latestPlanet.ssObject.nextRaidAt == null?''
                        :DateUtil.formatShortDateTime(ML.latestPlanet.ssObject.nextRaidAt)}" 
                        left="0" right="0" textAlign="center"/>
            </s:Group>
            
            <s:DataGroup left="7" top="40" bottom="30" itemRenderer="components.unit.IRRaidUnitEntry"
               dataProvider="{MPlanet.getRaiders(
                  ML.latestGalaxy.apocalypseHasStarted
                        ? 0 : ML.latestPlanet.ssObject.raidArg,
                  ML.latestPlanet.ssObject.nextRaidAt,
                  (
                     ML.latestPlanet.ssObject.inBattleground
                     || ML.latestPlanet.ssObject.inMiniBattleground
                  ),
                  ML.latestGalaxy.apocalypseStartEvent
               )}">
               <s:layout>
                  <s:TileLayout requestedColumnCount="4"/>
               </s:layout>
            </s:DataGroup>
         </s:Group>
         <s:Group id="nextGroup" width="100%" height="100%" x="{background.width}">
            <s:BitmapImage source="{IMG.getImage(AssetNames.UI_IMAGES_FOLDER + 'raiders_bar')}"/>   
               <s:Button skinClass="components.skins.LeftButtonSkin"
                         left="28" top="2"
                         click="
                         if (addPlanet > 1)
                         {
                         addPlanet--;
                         }
                         else
                         {
                         switchTo.play([nextGroup], true)
                         }"/>
               <s:Label top="7" left="48" right="32" textAlign="center" fontSize="12" fontWeight="bold" color="#f4c300" 
                        text="{Localizer.string('Units', 'label.incomingRaiders')}"/>
               <s:Button skinClass="components.skins.RightButtonSkin"
                         right="12" top="2"
                         click="addPlanet++"/>
            
            <s:Group top="25" left="20" right="30">
               <s:Label fontSize="12" fontWeight="bold" 
                  text="{Localizer.string(
                     'Units',
                     ML.latestGalaxy.apocalypseHasStarted
                           ? 'label.afterDays' : 'label.withPlanets',
                     [
                       ML.latestGalaxy.apocalypseHasStarted
                           ? getDays(
                              ML.latestPlanet.ssObject.nextRaidAt,
                              ML.latestGalaxy.apocalypseStartEvent.occuresAt
                           ) + addPlanet
                           : ML.latestPlanet.ssObject.raidArg + addPlanet
                     ]
                  )}"
                  left="0" right="0" textAlign="center"/>
            </s:Group>
            
            <s:DataGroup left="7" top="40" bottom="30"
               itemRenderer="components.unit.IRRaidUnitEntry"
               dataProvider="{MPlanet.getRaiders(
                  ML.latestGalaxy.apocalypseHasStarted
                        ? addPlanet
                        : ML.latestPlanet.ssObject.raidArg + addPlanet,
                  ML.latestPlanet.ssObject.nextRaidAt,
                  (
                     ML.latestPlanet.ssObject.inBattleground
                     || ML.latestPlanet.ssObject.inMiniBattleground
                  ),
                  ML.latestGalaxy.apocalypseStartEvent
               )}">
               <s:layout>
                  <s:TileLayout requestedColumnCount="4"/>
               </s:layout>
            </s:DataGroup>
         </s:Group>
      </s:Group>
      <s:Group id="barGroup"
               rollOver="{shorten.stop(); widen.play([infoPanel])}"
               rollOut="{widen.stop(); shorten.play([infoPanel])}" >
         <battle:DarkBackground width="{raidLabel.width+6}" left="3" height="{raidLabel.height+4}"/>
         <base:ImageAndLabel left="6" bottom="1" type="{ResourceType.RAID_TIME}" userLargeIcon="true"
                             textToDisplay="{ML.latestPlanet.ssObject.raidTime}"
                             id="raidLabel"/>
      </s:Group>
      <s:layout>
         <s:VerticalLayout gap="1" paddingBottom="3"/>
      </s:layout>
   </s:Group>
</base:BaseContainer>

