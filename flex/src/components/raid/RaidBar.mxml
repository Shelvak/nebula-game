<?xml version="1.0" encoding="utf-8"?>
<base:BaseContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    xmlns:mx="library://ns.adobe.com/flex/halo"
                    xmlns:custom="components.resourcesbar.*"
                    xmlns:base="components.base.*"
                    xmlns:battle="components.battle.*"
                    width="{barGroup.width}">
   <fx:Script>
      <![CDATA[
         import com.developmentarc.core.utils.EventBroker;
         
         import globalevents.GlobalEvent;
         
         import models.planet.Planet;
         import models.resource.ResourceType;
         
         import mx.events.EffectEvent;
         import mx.events.FlexEvent;
         
         import utils.DateUtil;
         import utils.assets.AssetNames;
         import utils.locale.Localizer;
         private static const DURATION_TIME: int = 100;
         
         protected function shorten_effectEndHandler(event:EffectEvent):void
         {
            infoPanel.visible = false;
         }
         
         
         protected function widen_effectStartHandler(event:EffectEvent):void
         {
            infoPanel.visible = true;
         }
         
         [Bindable]
         private var addPlanet: int = 1;

         protected function shorten_effectStartHandler(event:EffectEvent):void
         {
            if (nextGroup.x < 235)
            {
               switchTo.play([nextGroup], true);
               addPlanet = 1;
            }
         }

      ]]>
   </fx:Script>
   
   <fx:Declarations>
      <s:Resize id="widen" heightTo="{background.height}"
                duration="{DURATION_TIME}" effectStart="widen_effectStartHandler(event)"/>
      
      <s:Resize id="shorten" heightTo="0" effectStart="shorten_effectStartHandler(event)"
                duration="{DURATION_TIME}" effectEnd="shorten_effectEndHandler(event)"/>
      
      <s:Move id="switchTo" xFrom="235" xTo="0" duration="{DURATION_TIME}" target="{nextGroup}"/>
      
      <s:Fade id="fadeIn" duration="{DURATION_TIME}"/>
      <s:Fade id="fadeOut" duration="{DURATION_TIME}"/>
   </fx:Declarations>
   <s:Group mouseEnabledWhereTransparent="true">
      <s:Group width="{background.width}" height="0" id="infoPanel"
               visible="false" clipAndEnableScrolling="true"
               rollOver="{shorten.stop(); fadeOut.stop(); widen.play([infoPanel]); fadeIn.play([infoPanel])}"
               rollOut="{widen.stop(); fadeIn.stop();  shorten.play([infoPanel]); fadeOut.play([infoPanel])}">
         <!-- content rect background -->
         <s:Group width="100%" height="100%">
            <s:BitmapImage id="background" source="{IMG.getImage(AssetNames.UI_IMAGES_FOLDER + 'raiders_bar')}"/>
            <s:Group left="40" top="2">
               <s:Label paddingTop="5" fontSize="12" fontWeight="bold" color="#f4c300" 
                        text="{Localizer.string('Units', 'label.incomingRaiders')}"/>
               <s:Button skinClass="components.skins.RightButtonSkin"
                         click="switchTo.play([nextGroup])"/>
               <s:layout>
                  <s:HorizontalLayout verticalAlign="middle" gap="1"/>
               </s:layout>
            </s:Group>
            
            <s:Group top="25" left="10" right="10">
               <s:Label fontSize="12" fontWeight="bold" text="{ML.latestPlanet.ssObject.nextRaidAt.toString()}" 
                        left="0" right="0" textAlign="center"/>
            </s:Group>
            
            <s:DataGroup left="7" top="40" bottom="30" itemRenderer="components.unit.IRUnitBuildingEntrySmall"
                         dataProvider="{Planet.getRaiders(ML.player.planetsCount)}">
               <s:layout>
                  <s:TileLayout requestedRowCount="{Math.max(1, 
                                Math.ceil(Number(Planet.getRaiders(ML.player.planetsCount).length)/4))}"/>
               </s:layout>
            </s:DataGroup>
         </s:Group>
         <s:Group id="nextGroup" width="100%" height="100%" x="{background.width}">
            <s:BitmapImage source="{IMG.getImage(AssetNames.UI_IMAGES_FOLDER + 'raiders_bar')}"/>            
            <s:Group left="23" top="2">
               <s:Button skinClass="components.skins.LeftButtonSkin"
                         click="
                         if (addPlanet > 1)
                         {
                         addPlanet--;
                         }
                         else
                         {
                         switchTo.play([nextGroup], true)
                         }"/>
               <s:Label paddingTop="5" fontSize="12" fontWeight="bold" color="#f4c300" 
                        text="{Localizer.string('Units', 'label.incomingRaiders')}"/>
               <s:Button skinClass="components.skins.RightButtonSkin"
                         click="addPlanet++"/>
               <s:layout>
                  <s:HorizontalLayout verticalAlign="middle" gap="1"/>
               </s:layout>
            </s:Group>
            
            <s:Group top="25" left="20" right="30">
               <s:Label fontSize="12" fontWeight="bold" 
                        text="{Localizer.string('Units', 'label.withPlanets', [ML.player.planetsCount + addPlanet])}" 
                        left="0" right="0" textAlign="center"/>
            </s:Group>
            
            <s:DataGroup left="7" top="40" bottom="30" itemRenderer="components.unit.IRUnitBuildingEntrySmall"
                         dataProvider="{Planet.getRaiders(ML.player.planetsCount + addPlanet)}">
               <s:layout>
                  <s:TileLayout requestedRowCount="{Math.max(1, 
                                Math.ceil(Number(Planet.getRaiders(ML.player.planetsCount + addPlanet).length)/4))}"/>
               </s:layout>
            </s:DataGroup>
         </s:Group>
      </s:Group>
      <s:Group id="barGroup"
               rollOver="{shorten.stop(); widen.play([infoPanel])}"
               rollOut="{widen.stop(); shorten.play([infoPanel])}" >
         <battle:DarkBackground width="{raidLabel.width+6}" left="3" height="{raidLabel.height+2}"/>
         <base:ImageAndLabel left="6" bottom="1" type="{ResourceType.RAID_TIME}" 
                             textToDisplay="{ML.latestPlanet.ssObject.raidTime}" 
                             id="raidLabel"/>
      </s:Group>
      <s:layout>
         <s:VerticalLayout gap="1"/>
      </s:layout>
   </s:Group>
</base:BaseContainer>

