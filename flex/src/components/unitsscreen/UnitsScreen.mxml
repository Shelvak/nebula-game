<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:base="components.base.*" 
         xmlns:location="components.location.*" 
         xmlns:unitsscreen="components.unitsscreen.*"
         xmlns:squadronsscreen="components.squadronsscreen.*">
   <fx:Script>
      <![CDATA[
         import models.unit.MCUnitScreen;
         import models.unit.UnitKind;
         
         import utils.locale.Localizer;
         
         [Bindable]
         private var US: MCUnitScreen = MCUnitScreen.getInstance();
         
         private function getText(prop: String, params: Array = null): String
         {
            return Localizer.string('Units', prop, params);
         }
      ]]>
   </fx:Script>
   <s:layout>
      <s:VerticalLayout gap="0" horizontalAlign="justify"/>
   </s:layout>
   <unitsscreen:ScreenLocations location="{US.location}" target="{US.target}"/>
   <unitsscreen:ScreenContent height="100%">
      <unitsscreen:leftControls>
         <base:AdvancedContainer>
            <base:layout><s:HorizontalLayout gap="1"/></base:layout>
            <s:ToggleButton name="{UnitKind.GROUND}" 
                            click="US.tabChanged(UnitKind.GROUND)"
                            label="{getText('kind.ground',
                            [US.getUnitCount(US.groundFlanks)])}"
                            visible="{US.groundVisible}"/>
            <s:ToggleButton name="{UnitKind.SPACE}" 
                            click="US.tabChanged(UnitKind.SPACE)"
                            label="{getText('kind.space',
                            [US.getUnitCount(US.spaceFlanks)])}"
                            visible="{US.spaceVisible}"/>
            <s:ToggleButton name="{UnitKind.MOVING}" 
                            click="US.tabChanged(UnitKind.MOVING)"
                            label="{getText('kind.launch')}"
                            visible="{US.moveVisible}"/>
            <s:ToggleButton name="{UnitKind.SQUADRON}" 
                            click="US.tabChanged(UnitKind.SQUADRON)"
                            label="{getText('kind.squadron')}"
                            visible="{US.squadronVisible}"/>
         </base:AdvancedContainer>
      </unitsscreen:leftControls>
      <unitsscreen:content>
         <s:DataGroup id="unitsGroundList" dataProvider="{US.groundFlanks}" left="0" right="0" top="0" bottom="0"
                      visible="{US.currentKind == UnitKind.GROUND}" 
                      includeInLayout="{US.currentKind == UnitKind.GROUND}"> 
            <s:itemRenderer>
               <fx:Component>
                  <s:ItemRenderer height="100%" width="100%" autoDrawBackground="false">
                     <unitsscreen:FlankComp flankModel="{data}" height="100%" width="100%"/>
                  </s:ItemRenderer>
               </fx:Component>
            </s:itemRenderer>
            <s:layout>
               <s:VerticalLayout rowHeight="120"/>
            </s:layout>
         </s:DataGroup>
         
         <s:DataGroup id="unitsSpaceList" dataProvider="{US.spaceFlanks}" left="0" right="0" top="0" bottom="0"
                      visible="{US.currentKind == UnitKind.SPACE}" 
                      includeInLayout="{US.currentKind == UnitKind.SPACE}"> 
            <s:itemRenderer>
               <fx:Component>
                  <s:ItemRenderer height="100%" width="100%" autoDrawBackground="false">
                     <unitsscreen:FlankComp flankModel="{data}" height="100%" width="100%"/>
                  </s:ItemRenderer>
               </fx:Component>
            </s:itemRenderer>
            <s:layout>
               <s:VerticalLayout rowHeight="120"/>
            </s:layout>
         </s:DataGroup>
         
         <s:Group left="0" right="0" top="0" bottom="0"
                  visible="{US.currentKind == UnitKind.MOVING}" 
                  includeInLayout="{US.currentKind == UnitKind.MOVING}">
            <base:Scroller left="0" right="0" top="0" bottom="0" stepMultiplier="10">
               <s:Group left="0" right="0">
                  <s:DataGroup id="unitsMovingList" dataProvider="{US.routes}" width="100%" height="100%">
                     <s:layout><s:VerticalLayout/></s:layout>
                     <s:itemRenderer>
                        <fx:Component>
                           <squadronsscreen:IRSquadronElement managementButtonVisible="true"/>
                        </fx:Component>
                     </s:itemRenderer>
                  </s:DataGroup>
               </s:Group>
            </base:Scroller>
            <base:Warning text="{getText('warning.noFleets')}" horizontalCenter="0" 
                          verticalCenter="0" maxWidth="{unitsMovingList.width - 50}"
                          visible="{!US.routes || US.routes.length == 0}"/>
         </s:Group>
         <s:DataGroup id="unitsSquadronList" dataProvider="{US.squadronFlanks}" left="0" right="0" top="0" bottom="0"
                      visible="{US.currentKind == UnitKind.SQUADRON}" 
                      includeInLayout="{US.currentKind == UnitKind.SQUADRON}">
            <s:layout><s:VerticalLayout/></s:layout>
            <s:itemRenderer>
               <fx:Component>
                  <s:ItemRenderer height="100%" width="100%" autoDrawBackground="false">
                     <unitsscreen:FlankComp flankModel="{data}" height="100%" width="100%"/>
                  </s:ItemRenderer>
               </fx:Component>
            </s:itemRenderer>
         </s:DataGroup>
      </unitsscreen:content>
   </unitsscreen:ScreenContent>
</s:Group>
