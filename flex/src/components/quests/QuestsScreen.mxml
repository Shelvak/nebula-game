<?xml version="1.0" encoding="utf-8"?>
<base:BaseContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                    xmlns:s="library://ns.adobe.com/flex/spark" 
                    xmlns:mx="library://ns.adobe.com/flex/mx"
                    xmlns:base="components.base.*"
                    xmlns:quests="components.quests.*"
                    width="100%" height="100%"
                    initialize="this_initializeHandler(event)">
   <fx:Script>
      <![CDATA[
         import components.notifications.skins.NotificationsScrollerSkin;
         import components.skins.ListNonScrollableSkin;
         
         import models.quest.events.QuestCollectionEvent;
         import models.quest.events.QuestEvent;
         
         import mx.collections.ArrayCollection;
         import mx.events.FlexEvent;
         
         import spark.events.IndexChangeEvent;
         
         import utils.Localizer;
         
         
         private var _filterFunctions:ArrayCollection = null;
         
         private var dontApply: Boolean = false;
         
         private function updateButtonState(e: QuestCollectionEvent): void
         {
            if (barFilterButtons.selectedIndex != ML.quests.selectedFilter)
            {
               barFilterButtons.selectedIndex = ML.quests.selectedFilter;
               dontApply = true;
            }
         }
         
         private function this_initializeHandler(event:FlexEvent):void
         {
            ML.quests.addEventListener(QuestCollectionEvent.FILTER, updateButtonState);
            _filterFunctions = new ArrayCollection([
               {
                  "apply": function():void{ ML.quests.applyCompletedFilter(false) },
                  "label": Localizer.string("Quests", "label.current")+' ('+ML.quests.currentTotal+')'
               },
               {
                  "apply": function():void{ ML.quests.applyCompletedFilter(true) },
                  "label": Localizer.string("Quests", "label.completed")+' ('+ML.quests.completedTotal+')'
               }
            ]);
            ML.quests.addEventListener(QuestCollectionEvent.COUNTERS_UPDATED, refreshCounters);
            barFilterButtons.dataProvider = _filterFunctions; 
         }
         
         private function refreshCounters(e: QuestCollectionEvent): void
         {
            var current: Object = _filterFunctions.getItemAt(0);
            current.label = Localizer.string("Quests", "label.current") 
               + ' ('+ML.quests.currentTotal+')';
            _filterFunctions.setItemAt(current, 0);
            
            var completed: Object = _filterFunctions.getItemAt(1);
            completed.label = Localizer.string("Quests", "label.completed") 
               + ' ('+ML.quests.completedTotal+')';
            _filterFunctions.setItemAt(completed, 1);
         }
         
         
         private function barFilterButtons_changeHandler(event:IndexChangeEvent):void
         {
            _filterFunctions.getItemAt(event.newIndex).apply();
         }

         protected function lstQuests_scrollRequestedHandler(event:QuestEvent):void
         {
            vPort.verticalScrollPosition = event.index * IRQuest.TITLE_HEIGHT;
         }

      ]]>
   </fx:Script>
   
   <!-- top artwork -->
   <s:Path width="420" height="34" data="M 0 0 L 386 0 L 420 33 L 0 33 Z">
      <s:fill>
         <s:SolidColor color="0x323232"/>
      </s:fill>
   </s:Path>
   <s:Line left="386" width="34" height="34"
           xFrom="0" yFrom="0" xTo="33" yTo="33">
      <s:stroke>
         <s:SolidColorStroke color="0x020202" />
      </s:stroke>
   </s:Line>
   <s:Line left="420" right="0" top="33"
           xFrom="0" yFrom="0" xTo="10" yTo="0">
      <s:stroke>
         <s:SolidColorStroke color="0x808080"/>
      </s:stroke>
   </s:Line>
   <s:Rect left="0" right="0" top="34" height="4">
      <s:fill>
         <s:SolidColor color="{getStyle('chromeColor')}"/>
      </s:fill>
   </s:Rect>
   
   <!-- no quests indicator: shown only if there are no quests -->
   <s:Label id="lblNoQuests" text="{ML.quests.isEmpty
            ? Localizer.string('Quests', 'label.noQuests')
            : Localizer.string('Quests', 'label.title')}"
            fontSize="20" left="10" top="10"/>
   
   <!-- shown only if there are no quests -->
   <s:Line visible="{ML.quests.isEmpty}"
           left="0" right="0" top="39" xFrom="0" xTo="10">
      <s:stroke>
         <s:SolidColorStroke color="0x191919"/>
      </s:stroke>
   </s:Line>
   
   <s:ButtonBar id="barFilterButtons" requireSelection="true" right="5" top="5"
                change="barFilterButtons_changeHandler(event)" focusEnabled="false"/>
   <base:Scroller left="0" right="0" top="38" bottom="0" stepMultiplier="5"
                  skinClass="components.notifications.skins.NotificationsScrollerSkin">
      <s:Group left="0" right="0" height="100%" id="vPort">
         <quests:QuestsList scrollRequested="lstQuests_scrollRequestedHandler(event)" useVirtualLayout="false" 
                            left="0" right="0" height="100%" skinClass="components.skins.ListNonScrollableSkin"
                            id="lstQuests"/>
      </s:Group>
   </base:Scroller>
   
</base:BaseContainer>
