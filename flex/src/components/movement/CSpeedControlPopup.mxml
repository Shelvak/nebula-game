<?xml version="1.0" encoding="utf-8"?>
<space:CSpaceMapPopup xmlns:fx="http://ns.adobe.com/mxml/2009" 
                      xmlns:s="library://ns.adobe.com/flex/spark" 
                      xmlns:mx="library://ns.adobe.com/flex/mx"
                      xmlns:space="components.map.space.*"
                      transparentWhenNotUnderMouse="false"
                      skinClass="components.map.space.skins.CStaticSpaceObjectsPopupSkin">
   
   <fx:Declarations>
      <mx:NumberFormatter id="fmtSliderDataTip" precision="1"/>
   </fx:Declarations>
   
   <fx:Script>
      <![CDATA[
         private function sldChangeSpeed_dataTipFormatFunction(value:Number) : String
         {
            return fmtSliderDataTip.format(value) + "%";
         }
         
         
         [Bindable]
         public var model:CSpeedControlPopupM;
         
         
         private function sldChangeSpeed_changeHandler(event:Event):void
         {
            if (model != null)
            {
               model.speedModifier = sldChangeSpeed.value / 100;
            }
         }
      ]]>
   </fx:Script>
   
   <!--
   <s:Group left="5" right="8" top="5" bottom="10">
   -->
      
      <space:layout>
         <s:VerticalLayout paddingLeft="2" paddingRight="2" paddingTop="5" paddingBottom="5"
                           horizontalAlign="center"/>
      </space:layout>
      
      <s:Label id="lblArrivesIn" text="{model.text_arrivesInLabel}"/>
      <s:Label id="lblArrivesAt" text="{model.text_arrivesAtLabel(model.arrivalDate.occuresAt)}"/>
      <s:Group width="100%">
         <s:layout>
            <s:HorizontalLayout gap="5" paddingTop="12"/>
         </s:layout>
         <s:Label id="lblSpeedMin"
                  text="{sldChangeSpeed_dataTipFormatFunction(model.speedModifierMin * 100)}"/>
         <s:HSlider id="sldChangeSpeed" width="100%"
                    minimum="{model.speedModifierMin * 100}"
                    maximum="{model.speedModifierMax * 100}"
                    value="{model.speedModifier * 100}"
                    stepSize="0.1"
                    dataTipFormatFunction="sldChangeSpeed_dataTipFormatFunction"
                    change="sldChangeSpeed_changeHandler(event)"/>
         <s:Label id="lblSpeedMax"
                  text="{sldChangeSpeed_dataTipFormatFunction(model.speedModifierMax * 100)}"/>
      </s:Group>
      <s:Group width="100%">
         <s:layout>
            <s:VerticalLayout paddingTop="12" gap="10"/>
         </s:layout>
         <s:Group width="100%" visible="{model.showSpeedUpCost}" includeInLayout="{model.showSpeedUpCost}">
            <s:Label id="lblSpeedUpCost" left="0" right="0" lineBreak="toFit" textAlign="center"
                     text="{model.text_speedUpCostLabel}"/>
         </s:Group>
         <s:Group width="100%">
            <s:layout>
               <s:VerticalLayout horizontalAlign="center"/>
            </s:layout>
            <s:Group width="100%">
               <s:Label id="lblCooldownInfo" textAlign="center" lineBreak="toFit" 
                        left="0" right="0" text="{model.text_cooldownInfoLabel}"/>
            </s:Group>
            <s:Button id="btnCooldownInfo" 
                      label="{model.label_cooldownInfoButton}"
                      skinClass="components.skins.LinkButtonSkin"
                      click="model.openPreBattleCooldownInfo()"/>
         </s:Group>
      </s:Group>
      <s:Group width="100%">
         <s:layout>
            <s:VerticalLayout paddingTop="5" horizontalAlign="justify"/>
         </s:layout>
         <s:Button id="btnConfirm"
                   visible="{model.playerHasEnoughCreds}"
                   includeInLayout="{model.playerHasEnoughCreds}"
                   label="{model.label_confirmButton}"
                   click="model.confirm()"/>
         <s:Button id="btnBuyCreds"
                   visible="{!model.playerHasEnoughCreds}"
                   includeInLayout="{!model.playerHasEnoughCreds}"
                   label="{model.label_buyCredsButton}"
                   click="model.buyCreds()"/>
         <s:Button id="btnReset"
                   label="{model.label_resetButton}"
                   click="model.reset()"/>
         <s:Button id="btnCancel"
                   label="{model.label_cancelButton}"
                   click="model.cancel()"/>
      </s:Group>
      
   <!--
   </s:Group>
   -->
   
</space:CSpaceMapPopup>
