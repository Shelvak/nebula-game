<?xml version="1.0" encoding="utf-8"?>
<base:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
                   xmlns:s="library://ns.adobe.com/flex/spark" 
                   xmlns:mx="library://ns.adobe.com/flex/mx" 
                   xmlns:base="components.base.*" 
                   xmlns:unitsscreen="components.unitsscreen.*"
                   title="{RM.getString('Units', 'label.flankNr', [flankNr])}"
				   skinClass="components.skins.FlankPanelSkin">
   
   <fx:Metadata>
      [ResourceBundle ("Units")]
   </fx:Metadata>
   
   <fx:Script>
      <![CDATA[
		  import components.skins.FlankPanelSkin;
		  
		  import models.unit.Unit;
		  
		  import mx.collections.ArrayCollection;
		  import mx.events.FlexEvent;
		  
		  import spark.components.List;
         [Bindable]
         public var flankNr: int;
         [Bindable]
         public var units: ArrayCollection;
         
         public function get selectedUnits(): Vector.<Object>
         {
            return unitsList.selectedItems;
         }
         
         public function selectUnits(unitsToSelect: Array): void
         {
           selectionPreList = unitsToSelect;
         }
         
         private var selectionPreList: Array = null;
         
         public function selectAll():void
         {                               
            var selectedIndexArray:Vector.<int> = new Vector.<int>;
            for (var i:int=0;i<units.length;i++)
            {
               selectedIndexArray.push(i);
            }
            unitsList.selectedIndices = selectedIndexArray;
         }
         
         
         public function deselectAll():void 
         {
            unitsList.selectedIndices = new Vector.<int>;            
         }//deselectAll
         

         protected function unitsList_updateCompleteHandler(event:FlexEvent):void
         {
            if (selectionPreList != null)
            {
               var preSelection: Vector.<int> = new Vector.<int>;
               for each (var unit: Unit in selectionPreList)
               {
                  var uIndex: int = units.getItemIndex(unit);
                  if (uIndex != -1)
                     preSelection.push(uIndex);
               }
               unitsList.selectedIndices = preSelection;
               selectionPreList = null;
            }
         }

      ]]>
   </fx:Script>
   
   <base:AdvancedList id="unitsList" dataProvider="{units}" left="0" right="0" top="0" bottom="0"
                      useVirtualLayout="false" contentBackgroundColor="#0f0f0f" contentBackgroundAlpha="0"
                      rollOverColor="#4f4f4f" selectionColor="#2f2f2f"
                      borderVisible="true" borderColor="#afafaf" autoLayout="true"
                      allowMultipleSelection="true" updateComplete="unitsList_updateCompleteHandler(event)"
                      skinClass="components.skins.ListNonScrollableSkin"> 
      <base:itemRenderer>
         <fx:Component>
            <s:ItemRenderer width="56" height="78">
				<fx:Script>
					<![CDATA[
						import models.unit.Unit;
					]]>
				</fx:Script>
				<unitsscreen:UnitComp level="{(data as Unit).upgradePart.level}" horizontalCenter="0" verticalCenter="0"
									  hp="{(data as Unit).hp}" type="{(data as Unit).type}" stance="{(data as Unit).stance}"/>
            </s:ItemRenderer>
         </fx:Component>
      </base:itemRenderer>
      <base:layout>
         <s:TileLayout requestedColumnCount="3"/>
      </base:layout>
   </base:AdvancedList>
</base:Panel>