<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:buildingselectedsidebar="components.buildingselectedsidebar.*">
   <fx:Script>
      <![CDATA[
      import components.skins.YellowButtonSkin;

      import controllers.buildings.BuildingsCommand;
      import models.building.Building;
      import models.building.Npc;
      import models.building.events.BuildingEvent;
      import models.unit.MNpcFlank;
         
      import mx.collections.ArrayCollection;
      import mx.collections.Sort;
      import mx.collections.SortField;

      import utils.locale.Localizer;

      [Bindable]
      private var flanks: ArrayCollection = new ArrayCollection();

      private var _building: Npc;

      private var flanksHash: Object = {};

      public function set building(value: Building): void
      {
         _building = value as Npc;
         if (_building.unitsCached == null)
         {
            flanks.removeAll();
           _building.addEventListener(BuildingEvent.CACHED_UNITS_CHANGE,
              rebuildFlanks);
         }
         else
         {
           rebuildFlanks();
         }
      }

      private function rebuildFlanks(e: BuildingEvent = null): void
      {
         if (e != null)
         {
            e.building.removeEventListener(
               BuildingEvent.CACHED_UNITS_CHANGE, rebuildFlanks
            );
         }
         flanks.removeAll();
         flanksHash = {};
         if (_building != null) {
            for (var flankKey: String in _building.unitsCached)
            {
               var flnk: MNpcFlank = new MNpcFlank(int(flankKey), _building.unitsCached[flankKey]);
               flanks.addItem(flnk);
            }

            flanks.sort = new Sort();
            flanks.sort.fields = [new SortField('flank', false, false, true)];
            flanks.refresh();
         }
      }

      private function show_clickHandler(e: MouseEvent): void
      {
         new BuildingsCommand(BuildingsCommand.SHOW_GARRISON,
            _building).dispatch();
      }
      ]]>
   </fx:Script>
   <s:DataGroup dataProvider="{flanks}" width="100%"> 
      <s:itemRenderer>
         <fx:Component>
            <s:ItemRenderer width="100%" autoDrawBackground="false">
               <buildingselectedsidebar:NpcFlank flankModel="{data}" width="100%"/>
            </s:ItemRenderer>
         </fx:Component>
      </s:itemRenderer>
      <s:layout>
         <s:VerticalLayout/>
      </s:layout>
   </s:DataGroup>

   <s:Button label="{Localizer.string('Units', 'label.showNpc')}"
             skinClass="{YellowButtonSkin}"
             click="show_clickHandler(event)"/>

   <s:layout><s:VerticalLayout horizontalAlign="center"/></s:layout>
</s:Group>
