<?xml version="1.0" encoding="utf-8"?>
<base:BaseContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                    xmlns:s="library://ns.adobe.com/flex/spark" 
                    xmlns:mx="library://ns.adobe.com/flex/mx"
                    xmlns:base="components.base.*"
                    xmlns:notifs="components.notifications.*"
                    width="100%" height="100%"
                    initialize="this_initializeHandler(event)">
   
   <fx:Metadata>
      [ResourceBundle("Notifications")]
   </fx:Metadata>
   
   <fx:Script>
      <![CDATA[
         import components.skins.ListNonScrollableSkin;
         
         import models.ModelLocator;
         
         import mx.collections.ArrayCollection;
         import mx.events.FlexEvent;
         
         import spark.events.IndexChangeEvent;

         
         private var _filterFunctions:ArrayCollection = null;
         
         
         private function this_initializeHandler(event:FlexEvent):void
         {
            _filterFunctions = new ArrayCollection([
               {
                  "apply": function():void{ ML.notifications.removeFilter() },
                  "label": resourceManager.getString("Notifications", "label.notifications.all")
               },
               {
                  "apply": function():void{ ML.notifications.applyStarredFilter(true) },
                  "label": resourceManager.getString("Notifications", "label.notifications.starred")
               },
               {
                  "apply": function():void{ ML.notifications.applyReadFilter(false) },
                  "label": resourceManager.getString("Notifications", "label.notifications.unread")
               }
            ]);
            barFilterButtons.dataProvider = _filterFunctions; 
         }
         
         
         private function barFilterButtons_changeHandler(event:IndexChangeEvent):void
         {
            _filterFunctions.getItemAt(event.newIndex).apply();
         }
      ]]>
   </fx:Script>
   
   <!-- top artwork -->
   <s:Path width="420" height="34" data="M 0 0 L 386 0 L 420 33 L 0 33 Z">
      <s:fill>
         <s:SolidColor color="0x323232"/>
      </s:fill>
   </s:Path>
   <s:Line left="386" width="34" height="34"
           xFrom="0" yFrom="0" xTo="33" yTo="33">
      <s:stroke>
         <s:SolidColorStroke color="0x020202" />
      </s:stroke>
   </s:Line>
   <s:Line left="420" right="0" top="33"
           xFrom="0" yFrom="0" xTo="10" yTo="0">
      <s:stroke>
         <s:SolidColorStroke color="0x808080"/>
      </s:stroke>
   </s:Line>
   <s:Rect left="0" right="0" top="34" height="4">
      <s:fill>
         <s:SolidColor color="{getStyle('chromeColor')}"/>
      </s:fill>
   </s:Rect>
   
   <!-- no notifications indicator: shown only if there are no notifications -->
   <s:Label id="lblNoNotifs" text="{RM.getString('Notifications', 'label.noNotifications')}"
            fontSize="20" left="10" top="10" visible="{ML.notifications.isEmpty}"/>
   
   <!-- shown only if there are no notifications -->
   <s:Line visible="{ModelLocator.getInstance().notifications.length == 0}"
           left="0" right="0" top="39" xFrom="0" xTo="10">
      <s:stroke>
         <s:SolidColorStroke color="0x191919"/>
      </s:stroke>
   </s:Line>
   
   <s:ButtonBar id="barFilterButtons" requireSelection="true" right="5" top="5"
                change="barFilterButtons_changeHandler(event)"/>
   <base:ScrollerVariableScrollStep left="0" right="0" top="38" bottom="0" stepMultiplyer="10">
      <s:Group height="100%" width="100%">
         <notifs:NotificationsList left="0" right="0" id="lstNotifications" height="100%"
                                   skinClass="components.skins.ListNonScrollableSkin"/>
      </s:Group>
   </base:ScrollerVariableScrollStep>
   
</base:BaseContainer>
