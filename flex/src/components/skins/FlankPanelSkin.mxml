<?xml version="1.0" encoding="utf-8"?>
<base:BaseSkin xmlns:base="components.base.*"
               xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/halo"
               xmlns:unitsscreen="components.unitsscreen.*"
               width="100%" minWidth="20" minHeight="30">
   <fx:Metadata>
      [HostComponent("components.unitsscreen.FlankComp")]
   </fx:Metadata>
   <fx:Script>
      import components.unitsscreen.UnitsDragIndicator;
      import components.unitsscreen.events.UnitsScreenEvent;
      
      import models.Owner;
      
      import utils.assets.AssetNames;
      import utils.locale.Localizer;
      import config.BattleConfig;
   </fx:Script>
   <base:states>
      <s:State name="normal"/>
      <s:State name="disabled"/>
      <s:State name="transfering"/>
      <s:State name="normalWithControlBar"/>
      <s:State name="disabledWithControlBar"/>
   </base:states>
   
   <!-- Title container -->
   <s:Group id="titleCont" left="0" width="21" top="0" bottom="0" 
            toolTip="{Localizer.string('Units', 'tooltip.flank',
            [Localizer.string('Units', 'label.flankNr'+hostComponent.flankModel.nr),
             BattleConfig.getFlankHitChance(hostComponent.flankModel.nr)])}">
      <!-- Background of the title -->
      <s:Path alpha="0.6" data="M 0 8 L 8 0 L {titleCont.width-1} 0 L {titleCont.width-1} 
              {titleCont.height-1} L 0 {titleCont.height-1} Z" 
              winding="nonZero" top="0" left="0" right="0" bottom="0">
         <s:fill>
            <s:LinearGradient rotation="270">
               <s:GradientEntry color="0x004F68" ratio="0"/>
               <s:GradientEntry alpha="0.282353" color="0x00232E" ratio="1"/>
            </s:LinearGradient>
         </s:fill>
         <s:stroke>
            <s:SolidColorStroke caps="none" joints="miter" miterLimit="4" scaleMode="normal" weight="1"/>
         </s:stroke>
      </s:Path>
      <!--- Title of the component. -->
      <s:Button skinClass="components.skins.ZoomInButtonSkin" 
                click="hostComponent.dispatchEvent(new UnitsScreenEvent(UnitsScreenEvent.FLANK_SELECT_ALL))" 
                horizontalCenter="0" y="10"/>
      <s:Button skinClass="components.skins.ZoomOutButtonSkin" 
                click="hostComponent.dispatchEvent(new UnitsScreenEvent(UnitsScreenEvent.FLANK_DESELECT))" 
                horizontalCenter="0" y="28"/>
      <s:Label styleName="panelTitle" 
               text="{Localizer.string('Units', 'label.flankNr'+hostComponent.flankModel.nr)}"
               top="50" horizontalCenter="-3" rotation="90"/> 
   </s:Group>
   
   
   <s:Group left="22" right="0" top="0" bottom="0">
      
      <base:PanelContentArtwork left="0" right="0" top="0" bottom="0"/>
      
      <!--- All the content goes here -->
      <s:Group id="contentGroup" left="12" right="1" top="13" bottom="15">
         <base:Scroller id="scrollCont" top="0" bottom="0" left="0" right="0" horizontalScrollPolicy="off" 
                        stepMultiplier="5">
            <s:Group width="100%" height="100%">
               <base:AdvancedList id="unitsList" dataProvider="{hostComponent.flankModel.flank}" left="0" right="0" height="100%"
                                  skinClass="components.skins.ListNonScrollableSkin"
                                  useVirtualLayout="false" contentBackgroundColor="#0f0f0f"
                                  rollOverColor="#4f4f4f" selectionColor="#2f2f2f" dragEnter="hostComponent.dragEnterHandler(event)"
                                  borderVisible="false" 
                                  dragMoveEnabled="{hostComponent.flankModel.owner == Owner.PLAYER 
                                  &amp;&amp; currentState != 'transfering'?true:false}"
                                  dragIndicatorClass="{UnitsDragIndicator}"
                                  change="hostComponent.unitsList_changeHandler(event)"
                                  allowMultipleSelection="true" updateComplete="
                                  if (hostComponent.deselect)
                                  {
                                  hostComponent.deselect = false;
                                  hostComponent.dispatchEvent(new UnitsScreenEvent(UnitsScreenEvent.FLANK_DESELECT));
                                  }"
                                  dragEnabled="{hostComponent.flankModel.owner == Owner.PLAYER 
                                  &amp;&amp; currentState != 'transfering'?true:false}"
                                  dropEnabled="{hostComponent.flankModel.owner == Owner.PLAYER 
                                  &amp;&amp; currentState != 'transfering'?true:false}"
                                  dragDrop="hostComponent.unitsList_dragDropHandler(event)">
                  <base:itemRenderer.transfering>
                     <fx:Component>
                        <s:ItemRenderer width="100%" height="100%">
                           <fx:Script>
                              <![CDATA[
                                 import models.unit.Unit;
                              ]]>
                           </fx:Script>
                           <unitsscreen:UnitComp deployable="{Unit(data).deploysTo != null}" 
                                                 stance="{Unit(data).newStance}" level="{Unit(data).upgradePart.level}" 
                                                 hp="{Unit(data).hp}" type="{Unit(data).type}"
                                                 unit="{Unit(data)}" transfer="true"/>
                        </s:ItemRenderer>
                     </fx:Component>
                  </base:itemRenderer.transfering>                  
                  <base:itemRenderer.normal>
                     <fx:Component>
                        <s:ItemRenderer width="100%" height="100%">
                           <fx:Script>
                              <![CDATA[
                                 import models.unit.Unit;
                              ]]>
                           </fx:Script>
                           <unitsscreen:UnitComp deployable="{Unit(data).deploysTo != null}" 
                                                 stance="{Unit(data).newStance}" level="{Unit(data).upgradePart.level}" 
                                                 hp="{Unit(data).hp}" type="{Unit(data).type}"
                                                 unit="{Unit(data)}" transfer="false"/>
                        </s:ItemRenderer>
                     </fx:Component>
                  </base:itemRenderer.normal>
                  <base:layout>
                     <s:TileLayout id="flankLayout" horizontalGap="1"
                                   requestedColumnCount="{unitsList.width / (flankLayout.columnWidth+1)}"/>
                  </base:layout>
               </base:AdvancedList>
            </s:Group>
         </base:Scroller>
      </s:Group>
      
   </s:Group>
   
</base:BaseSkin>