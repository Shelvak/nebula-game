<?xml version="1.0" encoding="utf-8"?>
<base:BaseSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/halo"
               xmlns:base="components.base.*"
               minWidth="16" minHeight="16" mouseEnabled="false"
               mouseChildren="false">
   
   <fx:Metadata>
      [HostComponent("components.notifications.NotificationsButton")]
   </fx:Metadata>
   
   <fx:Script>
      import components.notifications.NotificationsButton;
      
      import utils.assets.AssetNames;
      
      private function getColor(index: int): uint
      {
         return NotificationsButton.NEW_COLORS_GRADIENT[index];
      }
   </fx:Script>
   
   <!-- states -->
   <base:states>
      <s:State name="up" />
      <s:State name="over" />
      <s:State name="down" />
      <s:State name="disabled" />
   </base:states>
      
   <!-- layer 2: fill -->
   <s:BitmapImage source="{IMG.getImage(AssetNames.BUTTONS_IMAGE_FOLDER + 'notification_important')}"
                  alpha="{1-hostComponent.importantAlpha}"/>
   <!-- layer 1: fill -->
   <s:BitmapImage source="{IMG.getImage(AssetNames.BUTTONS_IMAGE_FOLDER + 'notification_up')}"
                  source.down="{IMG.getImage(AssetNames.BUTTONS_IMAGE_FOLDER + 'notification_down')}"
                  source.over="{IMG.getImage(AssetNames.BUTTONS_IMAGE_FOLDER + 'notification_over')}"
                  source.disabled="{IMG.getImage(AssetNames.BUTTONS_IMAGE_FOLDER + 'notification_disabled')}"
                  alpha="{hostComponent.importantAlpha}"/>

   
   
   <!-- layer 3: text -->
   <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
   <s:Label id="labelDisplay" textAlign="center" verticalAlign="middle" fontFamily="Arial"
            fontSize="12"
            maxDisplayedLines="1" horizontalCenter="0" verticalCenter="-1"
            left="10" right="10" top="2" bottom="2" fontWeight="bold"
            color="{hostComponent.newColorIndex == -1 ? hostComponent.labelColor : getColor(hostComponent.newColorIndex)}"/>
   
</base:BaseSkin>