<?xml version="1.0" encoding="utf-8"?>
<custom:BaseContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                      xmlns:s="library://ns.adobe.com/flex/spark" 
                      xmlns:mx="library://ns.adobe.com/flex/halo"
                      xmlns:custom="components.base.*"
                      xmlns:elements="components.buildingsidebar.*">	
   <fx:Script>
      <![CDATA[
         import components.skins.ListNonScrollableSkin;
         
         import models.building.Building;
         
         import mx.collections.ArrayCollection;
         import mx.collections.ArrayList;
         import mx.collections.ListCollectionView;
         import mx.collections.Sort;
         import mx.collections.SortField;
         import mx.events.CollectionEvent;
         import mx.events.CollectionEventKind;
         
         [Bindable]
         public var miniML:ArrayCollection = new ArrayCollection();
         
         private static const listWidth: int = 200;
         private static const listHeight: int = 120;
         
         private function refreshList(e: CollectionEvent): void
         {
            if (e.kind != CollectionEventKind.UPDATE)
            {
               buildGaleryGrid(ListCollectionView(e.currentTarget));
            }
         }
         
         private var oldList: ListCollectionView;
         
         public function buildGaleryGrid(list: ListCollectionView):void {
            miniML.removeAll();
            if (oldList != null)
            {
               oldList.removeEventListener(CollectionEvent.COLLECTION_CHANGE, refreshList);
            }
            oldList = list;
            list.addEventListener(CollectionEvent.COLLECTION_CHANGE, refreshList);
            for (var i: int = 0; i< list.length; i++)
            {
               var element:FacilitiesElement = new FacilitiesElement();
               if (list.length < 5){
                  element.cellWidth = ((listWidth - 7)/2)-6 ;
                  element.cellHeight = ((listHeight - 7)/2)-6;
               }
               else{
                  element.cellWidth = ((listWidth - 7)/2)-6 - 8 ;
                  element.cellHeight = ((listHeight - 7)/2)-6;
               }
               element.facility = list.getItemAt(i) as Building;
               miniML.addItem(element);
            }
            miniML.sort = new Sort();
            miniML.sort.fields = [new SortField("constructorMod", true, true, true)];
            miniML.refresh();
            selectedChange();
         }
         
         public function manualSelect(index: int = 0): void
         {
            if (miniML.length != 0)
            {
               if (buildFacilities.selectedIndex == -1)
               {
                  buildFacilities.selectedIndex = 0;
                  buildFacilities.selectedItem = miniML.getItemAt(0);
                  selectedChange();
               }
            }
            else
            {
               if (buildFacilities.selectedIndex != -1)
               {
                  buildFacilities.selectedIndex = -1;
                  selectedChange();
               }
            }
         }
         
         public function selectedChange():void{
            if (buildFacilities.selectedItem != null)
            {
               dispatchEvent(new SelectFacilityEvent((buildFacilities.selectedItem as FacilitiesElement).facility));
            }
            else
            {
               dispatchEvent(new SelectFacilityEvent(null));
            }
         }
         
         //TODO need to create Scroller instead of using default List scroller
         //because scroll step size. Also some testing about cell sizes
      ]]>
   </fx:Script>
   <custom:Scroller id="scrollCont" top="0" bottom="0" left="0" right="0"
                    horizontalScrollPolicy="off" stepMultiplier="10">
      <s:Group width="100%" height="100%">
         <custom:AdvancedList id="buildFacilities"  
                              itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
                              dataProvider="{miniML}" skinClass="components.skins.ListNonScrollableSkin"
                              left="6" top="6" right="0" height = "100%" useVirtualLayout="false" 
                              contentBackgroundColor="#0f0f0f"  
                              contentBackgroundAlpha="0" 
                              rollOverColor="#4f4f4f" selectionColor="#2f2f2f" 
                              change="selectedChange()" borderVisible="false" 
                              requireSelection="true">
            <custom:layout>
               <s:TileLayout requestedColumnCount="2"/>
            </custom:layout>
         </custom:AdvancedList>
         
      </s:Group>
   </custom:Scroller>
   
   
</custom:BaseContainer>
