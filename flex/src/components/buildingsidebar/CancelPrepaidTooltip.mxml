<?xml version="1.0"?>
<!-- tooltips/ToolTipComponents/PanelToolTip.mxml -->
<s:Group 
   xmlns:fx="http://ns.adobe.com/mxml/2009"    
   xmlns:mx="library://ns.adobe.com/flex/mx"    
   xmlns:base="components.base.*"  
   xmlns:s="library://ns.adobe.com/flex/spark"
   implements="mx.core.IToolTip">
   <fx:Script>
      <![CDATA[
      import config.Config;

      import models.constructionqueueentry.ConstructionQueueEntry;
      import models.parts.Upgradable;
      import models.parts.UpgradableType;
      import models.resource.ResourceType;

      import utils.ModelUtil;

      import utils.assets.AssetNames;
      import utils.assets.ImagePreloader;
      import utils.locale.Localizer;

      public function set model(value: ConstructionQueueEntry): void
      {
         function calcCost(resType: String): String
         {
            var cost: int = Math.floor(Upgradable.calculateCost(value.isUnit
                    ? UpgradableType.UNITS : UpgradableType.BUILDINGS,
                    ModelUtil.getModelSubclass(value.constructableType),
                    resType, {'level': 1}) * value.count);
            if (cost == 0)
            {
               return null;
            }
            return cost.toString();
         }
         metalCost = calcCost(ResourceType.METAL);
         energyCost = calcCost(ResourceType.ENERGY);
         zetiumCost = calcCost(ResourceType.ZETIUM);
         var popCost: int = Config.getUnitPopulation(
                 ModelUtil.getModelSubclass(value.constructableType)) *
                         value.count;
         populationCost = (popCost == 0 ? null : popCost.toString());
      }

      [Bindable]
      public var metalCost: String;

      [Bindable]
      public var energyCost: String;

      [Bindable]
      public var zetiumCost: String;

      [Bindable]
      public var populationCost: String;


      public function get text():String {
         return "";
      }
      public function set text(value:String):void {
      }


      private function getImg(name:String) : BitmapData
      {
         return ImagePreloader.getInstance().getImage
            (AssetNames.UNITS_SCREEN_IMAGE_FOLDER + "hint_" + name);
      }
		]]>
	</fx:Script>
   <s:Rect left="1" right="1" top="2" bottom="2" alpha="0.75">
      <s:fill>
         <s:SolidColor color="#000000"/>
      </s:fill>
   </s:Rect>
   <s:Group left="0" right="0" top="0" bottom="0">
      <s:layout>
         <s:VerticalLayout gap="0" horizontalAlign="justify"/>
      </s:layout>
      <s:Group>
         <s:layout><s:HorizontalLayout gap="0" verticalAlign="top"/></s:layout>
         <s:BitmapImage source="{getImg('top_left')}"/>
         <s:BitmapImage source="{getImg('top_center')}" width="100%" fillMode="repeat"/>
         <s:BitmapImage source="{getImg('top_right')}"/>
      </s:Group>
      <s:Group height="100%">
         <s:BitmapImage source="{getImg('center_left')}" top="0" bottom="0" left="0" fillMode="repeat"/>
         <s:BitmapImage source="{getImg('center_right')}" top="0" bottom="0" right="0" fillMode="repeat"/>
      </s:Group>
      <s:Group>
         <s:layout><s:HorizontalLayout gap="0" verticalAlign="bottom"/></s:layout>
         <s:BitmapImage source="{getImg('bottom_left')}"/>
         <s:BitmapImage source="{getImg('bottom_center')}" width="100%" fillMode="repeat"/>
         <s:BitmapImage source="{getImg('bottom_right')}"/>
      </s:Group>
   </s:Group>
   <base:AdvancedContainer left="2" right="2" top="4" bottom="4">
      <s:Label textAlign="center" fontSize="14" paddingLeft="-6"
               paddingBottom="3"
               text="{Localizer.string('Units', 'label.cancelPrepaid')}"/>
      <base:ImageAndLabel type="{ResourceType.METAL}" visible="{metalCost != null}"
                          textToDisplay="{metalCost}"/>
      <base:ImageAndLabel type="{ResourceType.ENERGY}" visible="{energyCost != null}"
                          textToDisplay="{energyCost}"/>
      <base:ImageAndLabel type="{ResourceType.ZETIUM}" visible="{zetiumCost != null}"
                          textToDisplay="{zetiumCost}"/>
      <base:ImageAndLabel type="{ResourceType.POPULATION}" visible="{populationCost != null}"
                          textToDisplay="{populationCost}"/>
      <base:layout>
         <s:VerticalLayout paddingLeft="12" paddingTop="6" paddingBottom="6" paddingRight="12" gap="6"/>
      </base:layout>
   </base:AdvancedContainer>
</s:Group>