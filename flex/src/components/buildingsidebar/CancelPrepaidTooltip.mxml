<?xml version="1.0"?>
<!-- tooltips/ToolTipComponents/PanelToolTip.mxml -->
<s:Group 
   xmlns:fx="http://ns.adobe.com/mxml/2009"    
   xmlns:mx="library://ns.adobe.com/flex/mx"    
   xmlns:base="components.base.*"  
   xmlns:s="library://ns.adobe.com/flex/spark"
   implements="mx.core.IToolTip">
   <fx:Script>
      <![CDATA[
      import config.Config;

      import models.ModelLocator;

      import models.constructionqueueentry.ConstructionQueueEntry;
      import models.parts.Upgradable;
      import models.parts.UpgradableType;
      import models.resource.ResourceType;

      import utils.ModelUtil;

      import utils.locale.Localizer;

      public function set model(value: ConstructionQueueEntry): void
      {
         function calcCost(resType: String): int
         {
            return Math.floor(Upgradable.calculateCost(value.isUnit
                    ? UpgradableType.UNITS : UpgradableType.BUILDINGS,
                    ModelUtil.getModelSubclass(value.constructableType),
                    resType, {'level': 1}) * value.count);
         }
         metalCost = calcCost(ResourceType.METAL);
         energyCost = calcCost(ResourceType.ENERGY);
         zetiumCost = calcCost(ResourceType.ZETIUM);
         var popCost: int = Config.getUnitPopulation(
                 ModelUtil.getModelSubclass(value.constructableType)) *
                         value.count;
         populationCost = (popCost == 0 ? null : popCost.toString());
      }

      [Bindable]
      public var metalCost: int;

      [Bindable]
      public var energyCost: int;

      [Bindable]
      public var zetiumCost: int;

      [Bindable]
      public var populationCost: String;


      public function get text():String {
         return "";
      }
      public function set text(value:String):void {
      }

      [Bindable]
      private var ML: ModelLocator = ModelLocator.getInstance();
		]]>
	</fx:Script>
   <s:Rect left="1" right="1" top="2" bottom="2" alpha="0.75">
      <s:fill>
         <s:SolidColor color="#000000"/>
      </s:fill>
   </s:Rect>
   <base:BorderedGroupBackground left="0" right="0" top="0" bottom="0"/>
   <base:AdvancedContainer left="2" right="2" top="4" bottom="4">
      <s:Label textAlign="center" fontSize="14" paddingLeft="-6"
               paddingBottom="3"
               text="{Localizer.string('Units', 'label.cancelPrepaid')}"/>
      <base:ImageAndLabel type="{ResourceType.METAL}" visible="{metalCost != 0}"
                          textToDisplay="{metalCost.toString()}"
                          labelStyleName="{metalCost +
                             ML.latestPlanet.ssObject.metal.currentStock >
                             ML.latestPlanet.ssObject.metal.maxStock
                             ? 'yellow' : null}"/>
      <base:ImageAndLabel type="{ResourceType.ENERGY}" visible="{energyCost != 0}"
                          textToDisplay="{energyCost.toString()}"
                          labelStyleName="{energyCost +
                             ML.latestPlanet.ssObject.energy.currentStock >
                             ML.latestPlanet.ssObject.energy.maxStock
                             ? 'yellow' : null}"/>
      <base:ImageAndLabel type="{ResourceType.ZETIUM}" visible="{zetiumCost != 0}"
                          textToDisplay="{zetiumCost.toString()}"
                          labelStyleName="{zetiumCost +
                             ML.latestPlanet.ssObject.zetium.currentStock >
                             ML.latestPlanet.ssObject.zetium.maxStock
                             ? 'yellow' : null}"/>
      <base:ImageAndLabel type="{ResourceType.POPULATION}" visible="{populationCost != null}"
                          textToDisplay="{populationCost}"/>
      <base:layout>
         <s:VerticalLayout paddingLeft="12" paddingTop="6" paddingBottom="6" paddingRight="12" gap="6"/>
      </base:layout>
   </base:AdvancedContainer>
</s:Group>