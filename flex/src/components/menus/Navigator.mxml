<?xml version="1.0" encoding="utf-8"?>
<!---
Component that lets easily navigate between recently visited galaxy, solar
system and planet.
-->
<base:BaseContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    xmlns:galaxy="components.galaxy.*"
                    xmlns:mnu="components.menus.*"
                    xmlns:base="components.base.*"
                    xmlns:notifications="components.notifications.*"
                    creationComplete="this_creationCompleteHandler(event)" >
   
   <s:Group id="topLeftMenu">
      <s:Group left="0" top="0" bottom="0">
         <s:layout>
            <s:HorizontalLayout horizontalAlign="left" gap="0"/>
         </s:layout>
         <notifications:NotificationsButton id="btnNotifications" name="{MainAreaScreens.NOTIFICATIONS}"/>
         <mnu:PlayerPlanetsSelector id="ddlPlayerPlanets" minWidth="100" dataProvider="{ML.player.planets}"/>
         <galaxy:ApocalypseIcon/>
         <base:AdvancedContainer height="100%">
            <base:layout>
               <s:HorizontalLayout gap="-9"/>
            </base:layout>
            <mnu:NavigatorButton id="btnCurrentGalaxy" name="{MainAreaScreens.GALAXY}" depth="3"
                                 imageData="{IMG.getImage(AssetNames.SS_IMAGE_FOLDER + 'galaxy')}"
                                 label="{Localizer.string ('Navigator', 'label.currentGalaxy')}"/>
            <mnu:NavigatorButton id="btnCurrentSS" name="{MainAreaScreens.SOLAR_SYSTEM}" depth="1"
               visible="{ML.latestSSMap != null}"
               imageData="{ML.latestSSMap.solarSystem.imageData}"
               label="{ML.latestSSMap.solarSystem.navigatorName}"
               />
            <mnu:NavigatorButton id="btnCurrentPlanet" name="{MainAreaScreens.PLANET}" depth="0"
                                 visible="{ML.latestPlanet != null}"
                                 imageData="{ML.latestPlanet.ssObject.imageData}"
                                 label="{ML.latestPlanet.ssObject.name}"/>
         </base:AdvancedContainer>
      </s:Group>
      
      <s:DataGroup top="26" left="0" dataProvider="{ML.notificationAlerts}">
         <s:itemRenderer>
            <fx:Component>
               <s:ItemRenderer autoDrawBackground="false">
                  <notifications:NotificationAlert notif="{data}"/>
               </s:ItemRenderer>
            </fx:Component>
         </s:itemRenderer>
         <s:layout>
            <s:VerticalLayout gap="6" paddingLeft="6" paddingTop="6"/>
         </s:layout>
      </s:DataGroup>
   </s:Group>
   
   <mnu:UnitsMenu id="unitsMenu" right="0" left="{topLeftMenu.width}"/>
   
   <fx:Script>
      <![CDATA[
         import controllers.screens.MainAreaScreens;
         import controllers.ui.NavigationController;
         
         import mx.events.FlexEvent;
         
         import utils.assets.AssetNames;
         import utils.locale.Localizer;
         
         
         /**
          * Registers buttons with navigation controller.
          */ 
         private function this_creationCompleteHandler(event:FlexEvent):void
         {
            var ctrl:NavigationController = NavigationController.getInstance();
            ctrl.registerButton(btnCurrentGalaxy);
            ctrl.registerButton(btnCurrentSS);
            ctrl.registerButton(btnCurrentPlanet);
            ctrl.registerButton(btnNotifications);
            
            //================
            ctrl.registerButton(unitsMenu.ground.btnNapUnits);
            ctrl.registerButton(unitsMenu.ground.btnAllyUnits);
            ctrl.registerButton(unitsMenu.ground.btnEnemyUnits);
            ctrl.registerButton(unitsMenu.ground.btnPlayerUnits);
            ctrl.registerButton(unitsMenu.space.btnNapUnits);
            ctrl.registerButton(unitsMenu.space.btnAllyUnits);
            ctrl.registerButton(unitsMenu.space.btnEnemyUnits);
            ctrl.registerButton(unitsMenu.space.btnPlayerUnits);
         }
      ]]>
   </fx:Script>
   
</base:BaseContainer>
