<?xml version="1.0" encoding="utf-8"?>
<!---
   TEMPORARY (for development) Developer menu component. Got a toggle button
   that shows/hides the menu.
-->
<base:BaseContainer
   xmlns:base="components.base.*"
   xmlns:s="library://ns.adobe.com/flex/spark"
   xmlns:fx="http://ns.adobe.com/mxml/2009">
   
   <fx:Metadata>
      <![CDATA[
         [ResourceBundle ("DeveloperMenu")]
      ]]>
   </fx:Metadata>
   
   <fx:Script>
      <![CDATA[
         import controllers.solarsystems.SolarSystemsCommand;
         import controllers.galaxies.GalaxiesCommand;
         
         import spark.components.Button;
         
         
         
         
         /**
          * Show and hide menu items when btnStart is toggled.
          */ 
         private function showHideMenu () :void
         {
            if (btnStart.selected)
            {
               menuItems.enabled = true;
            }
            else
            {
               menuItems.enabled = false;
            }
         }
         
         
         /**
          * When any of menu buttons is pressed menu should dissapear so
          * btnStart is clicked programatically. 
          */ 
         private function toggleStartButton (event: MouseEvent) :void
         {
            if (event.target is Button)
            {
               btnStart.dispatchEvent (new MouseEvent (MouseEvent.CLICK));
            }
         }
         
         
//         private function dispatchSampleGalaxyCommand () :void
//         {
//            new GalaxiesCommand (GalaxiesCommand.SHOW, {id: 1})
//               .dispatch ();
//         }
      ]]>
   </fx:Script>
   
   <!--- Toggle button that shows and hides menu. -->
   <s:ToggleButton id="btnStart" y="172" click="showHideMenu ()"
                   label="{RM.getString ('DeveloperMenu', 'label.start')}"/>
   
   <!--- Styled container for menu buttons. -->
   <s:SkinnableContainer id="menuItems" enabled="false"
                         click="toggleStartButton (event)">
      
      <!--- Button for showing sample galaxy. 
      <s:Button
         id="btnSampleGalaxy"
         click="dispatchSampleGalaxyCommand ()"
         width="100%"
         label="{RM.getString ('DeveloperMenu', 'label.sampleGalaxy')}"/> -->
                
   </s:SkinnableContainer>
   
</base:BaseContainer>