<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" 
         xmlns:battle="components.battle.*"
         mouseChildren="false" mouseEnabled="false">
   <fx:Script>
      <![CDATA[
         import com.greensock.TweenLite;
         import com.greensock.easing.Linear;
         
         import models.notification.parts.CombatOutcomeType;
         
         import mx.events.EffectEvent;
         
         import spark.effects.Fade;
         import spark.effects.Scale;
         import spark.effects.animation.RepeatBehavior;
         
         import utils.Localizer;
         [Bindable]
         public var outcome: int;
         
         private static const SHOW_LABEL_DURRATION: Number = 0.15;
         
         public function scaleIn(): void
         {
            centerGroup.scaleX = 0;
            centerGroup.scaleY = 0;
            TweenLite.to(centerGroup, SHOW_LABEL_DURRATION, {"scaleX": 1, "scaleY": 1,
               "ease": Linear.easeNone, 'onComplete': blink});
            TweenLite.delayedCall(0.1, 
               function (): void {
                  var fade: Fade = new Fade(whiteLbl);
                  fade.alphaFrom = 0;
                  fade.alphaTo = 1;
                  fade.repeatCount = 1;
                  fade.duration = 100;
                  fade.addEventListener(EffectEvent.EFFECT_END, function (e: Event): void
                  {
                     var _fade: Fade = new Fade(whiteLbl);
                     _fade.alphaFrom = 1;
                     _fade.alphaTo = 0;
                     _fade.repeatCount = 1;
                     _fade.duration = 700;
                     _fade.play();
                  });
                  fade.play();
               });
         }
         
         public function blink(): void
         {               
            backLbl.scaleX = 1;
            backLbl.scaleY = 1;
            backLbl.visible = true;
            var eff: Scale = new Scale(backLbl);
            eff.duration = 400;
            eff.repeatCount = 1;
            eff.scaleXTo = 2;
            eff.scaleYTo = 2;
            eff.play();
            var fade: Fade = new Fade(backLbl);
            fade.duration = 400;
            fade.alphaTo = 0;
            fade.alphaFrom = 0.6;
            fade.repeatCount = 1;
            fade.play();
         }
      ]]>
   </fx:Script>
   <s:Label text="{outcome==CombatOutcomeType.LOOSE?Localizer.string('BattleMap','youLost')
            :(outcome==CombatOutcomeType.WIN?Localizer.string('BattleMap','youWon')
            :Localizer.string('BattleMap','tie'))}" fontSize="54" id="fakeLbl" visible="false" scaleX="2"
                                                    scaleY="2"
                                                    color="#eec500" textAlign="center" textAlignLast="center"
                                                    horizontalCenter="0" verticalCenter="0" paddingLeft="10" paddingBottom="10"
                                                    paddingRight="10" paddingTop="10"/>
   <s:Label text="{outcome==CombatOutcomeType.LOOSE?Localizer.string('BattleMap','youLost')
            :(outcome==CombatOutcomeType.WIN?Localizer.string('BattleMap','youWon')
            :Localizer.string('BattleMap','tie'))}" fontSize="54" id="backLbl" visible="false" scaleX="2"
                                                    scaleY="2"
                                                    color="#eec500" textAlign="center" textAlignLast="center"
                                                    horizontalCenter="0" verticalCenter="0" paddingLeft="10" paddingBottom="10"
                                                    paddingRight="10" paddingTop="10"/>
   <s:Group horizontalCenter="0" verticalCenter="0" id="centerGroup" scaleX="0" scaleY="0">
      
      <!--battle:DarkBackground width="100%" height="100%"/-->
      <s:Label text="{outcome==CombatOutcomeType.LOOSE?Localizer.string('BattleMap','youLost')
               :(outcome==CombatOutcomeType.WIN?Localizer.string('BattleMap','youWon')
               :Localizer.string('BattleMap','tie'))}" fontSize="54" id="mainLbl"
                                                       color="#eec500" textAlign="center" textAlignLast="center"
                                                       horizontalCenter="0" verticalCenter="0" paddingLeft="10" paddingBottom="10"
                                                       paddingRight="10" paddingTop="10"/>
      <s:Label text="{outcome==CombatOutcomeType.LOOSE?Localizer.string('BattleMap','youLost')
               :(outcome==CombatOutcomeType.WIN?Localizer.string('BattleMap','youWon')
               :Localizer.string('BattleMap','tie'))}" fontSize="54" id="whiteLbl" alpha="0"
                                                       color="#ffffff" textAlign="center" textAlignLast="center"
                                                       horizontalCenter="0" verticalCenter="0" paddingLeft="10" paddingBottom="10"
                                                       paddingRight="10" paddingTop="10"/>
   </s:Group>
</s:Group>
