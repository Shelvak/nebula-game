<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:base="components.base.*"
             minWidth="50"
             height="15"
             mouseEnabled="false">
   
   <fx:Metadata>
      [HostComponent("components.chat.CChatChannelTab")]
   </fx:Metadata>
   
   <fx:Declarations>
      <s:AnimateFilter id="newMessageAnim"
                       target="{grpArtwork}"
                       bitmapFilter="{new GlowFilter(0x38D9EB)}"
                       duration="500"
                       repeatCount="0"
                       repeatBehavior="reverse">
         <s:SimpleMotionPath property="strength" valueFrom="0.0" valueTo="1.0"/>
      </s:AnimateFilter>
   </fx:Declarations>
   
   <fx:Script>
      <![CDATA[
         import spark.filters.GlowFilter;
         
         import utils.assets.AssetNames;
         import utils.assets.ImagePreloader;
         
         
         private function get IMG() : ImagePreloader
         {
            return ImagePreloader.getInstance();
         }
         
         
         private function getImage(key:String) : BitmapData
         {
            return IMG.getImage(AssetNames.CHAT_IMAGES_FOLDER + "tab_chan_" + key);
         }
         
         
         protected override function stateChanged(oldState:String, newState:String, recursive:Boolean) : void
         {
            super.stateChanged(oldState, newState, recursive);
            if (oldState == "newMessage")
            {
               newMessageAnim.end();
            }
            if (newState == "newMessage")
            {
               newMessageAnim.play();
            }
         }
      ]]>
   </fx:Script>
   
   <!-- states -->
   <s:states>
      <s:State name="up" stateGroups="unselectedStates"/>
      <s:State name="over" stateGroups="unselectedStates"/>
      <s:State name="down" stateGroups="unselectedStates, downStates"/>
      <s:State name="disabled" stateGroups="unselectedStates, disabledStates"/>
      <s:State name="upAndSelected" stateGroups="selectedStates, whiteStates"/>
      <s:State name="overAndSelected" stateGroups="selectedStates, whiteStates"/>
      <s:State name="downAndSelected" stateGroups="selectedStates, downStates"/>
      <s:State name="disabledAndSelected" stateGroups="selectedStates, whiteStates, disabledStates"/>
      <s:State name="newMessage" stateGroups="unselectedStates"/>
   </s:states>
      
   <!-- layer 1: artwork -->
   <s:Group id="grpArtwork" left="0" right="0" top="0" bottom="0" mouseEnabled="false">
      <s:layout>
         <s:HorizontalLayout gap="0"/>
      </s:layout>
      <s:BitmapImage source.unselectedStates="{getImage('inactive_left')}"
                     source.selectedStates="{getImage('active_left')}"/>
      <s:BitmapImage source.unselectedStates="{getImage('inactive_center')}"
                     source.selectedStates="{getImage('active_center')}"
                     width="100%"/>
      <s:BitmapImage source.unselectedStates="{getImage('inactive_right')}"
                     source.selectedStates="{getImage('active_right')}"/>
   </s:Group>
   
   <!-- layer 2: text and close button -->
   <s:Label id="labelDisplay" maxDisplayedLines="1"
            left="18" right="26" bottom="1"
            fontSize="10"
            color.selectedStates="0xF6AC22"/>
   
   <s:Button id="btnClose" right="12" bottom="1"
             skinClass="components.chat.CChatChannelCloseButtonSkin"/>
   
   
   
</s:SparkSkin>
