<?xml version="1.0" encoding="utf-8"?>
<space:CStaticSpaceObjectInfo xmlns:fx="http://ns.adobe.com/mxml/2009"
                              xmlns:s="library://ns.adobe.com/flex/spark"
                              xmlns:space="components.map.space.*"
                              xmlns:solarsystem="components.gameobjects.solarsystem.*"
                              xmlns:ui="components.ui.*"
                              title="{getString('title.solarSystemInfo')}">
   <fx:Binding source="MSolarSystem(staticObject)" destination="ss"/>
   <fx:Script>
      <![CDATA[
      import models.location.LocationMinimal;
      import models.solarsystem.MSSObject;
      import models.solarsystem.MSolarSystem;
      import models.solarsystem.SSMetadataType;

      import utils.DateUtil;
      import utils.locale.Localizer;


      [Bindable]
      private var ss: MSolarSystem;


      private function getString(property: String,
                                 parameters: Array = null): String {
         return Localizer.string("Galaxy", property, parameters);
      }

      private function getBtnOpenLabel(ss: MSolarSystem): String {
         return ss.isWormhole ?
                getString("label.openWormhole") :
                getString("label.openSolarSystem");
      }

      private function getSectorLabel(ss: MSolarSystem): String {
         return ss == null
                   ? "" : LocationMinimal.getSectorLabel(ss.currentLocation);
      }

      private function btnOpen_clickHandler(event: MouseEvent): void {
         ss.navigateTo();
      }

      private function formatTime(seconds: int): String {
         return DateUtil.secondsToHumanString(seconds);
      }
      ]]>
   </fx:Script>
   <space:layout>
      <s:VerticalLayout horizontalAlign="center"/>
   </space:layout>
   <s:BitmapImage width="{MSSObject.IMAGE_WIDTH}" height="{MSSObject.IMAGE_HEIGHT}"
                  source="{ss.imageData}" fillMode="scale"/>
   <s:Label text="{ss.name}"/>
   <s:Label text="{getSectorLabel(ss)}"/>
   <space:CSolarSystemMetadata model="{ss.metadata}"/>
   
   <s:Label id="lblShield" text="{getString('label.shield')}"
            visible="{ss.isShielded}" includeInLayout="{ss.isShielded}"
            width="{MSSObject.IMAGE_WIDTH}" lineBreak="toFit"
            textAlign="center"/>
   <s:Group visible="{ss.isShielded}" includeInLayout="{ss.isShielded}"
            width="{MSSObject.IMAGE_WIDTH}">
      <s:layout>
         <s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"
                             gap="5"/>
      </s:layout>
      <s:Label id="lblOwner" text="{getString('label.ssOwner')}"/>
      <ui:PlayerProfileButton player="{ss.player}"/>
   </s:Group>
   <s:Button id="btnInviteToAlliance"
             label="{getString('label.inviteToAlliance')}"
             visible="{ss.canInviteOwnerToAlliance}"
             includeInLayout="{ss.canInviteOwnerToAlliance}"
             click="ss.inviteOwnerToAlliance()"/>
   <s:Button id="btnOpen" label="{getBtnOpenLabel(ss)}"
             visible="{ss.isNavigable}"
             includeInLayout="{ss.isNavigable}"
             click="btnOpen_clickHandler(event)"/>
</space:CStaticSpaceObjectInfo>
