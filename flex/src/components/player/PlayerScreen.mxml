<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" 
         xmlns:base="components.base.*"
         xmlns:screens="components.screens.*"
         width="100%" height="100%"
         creationComplete="group1_creationCompleteHandler(event)" >
   <fx:Script>
      <![CDATA[
      import components.alliance.AllianceScreenM;

      import controllers.players.PlayersCommand;
      import controllers.screens.MainAreaScreens;
      import controllers.ui.NavigationController;

      import models.ModelLocator;
      import models.chat.MChat;
      import models.player.MRatingPlayer;

      import mx.collections.ArrayCollection;
      import mx.events.FlexEvent;

      import utils.UrlNavigate;
      import utils.assets.AssetNames;
      import utils.assets.ImagePreloader;
      import utils.locale.Localizer;


      private static const CONTENT_WIDTH: int = 600;

      [Bindable]
      public var player: MRatingPlayer = null;
      [Bindable]
      public var achievements: ArrayCollection;

      [Bindable]
      private var IMG: ImagePreloader = ImagePreloader.getInstance();

      private var NC: NavigationController = NavigationController.getInstance();

      protected function alliance_clickHandler(event: MouseEvent): void {
         AllianceScreenM.getInstance().showScreen(player.alliance.id);
      }

      protected function ratings_clickHandler(event: MouseEvent): void {
         new PlayersCommand(PlayersCommand.RATINGS, player.name).dispatch()
      }

      protected function chat_clickHandler(event: MouseEvent): void {
         MChat.getInstance().openPrivateChannel(player.id, player.name);
      }


      protected function group1_creationCompleteHandler(event: FlexEvent): void {
         NC.creationCompleteFunction(MainAreaScreens.PLAYER, this);
      }

      [Bindable]
      private var ML: ModelLocator = ModelLocator.getInstance();
      ]]>
   </fx:Script>
   <s:Label fontSize="52" horizontalCenter="0" verticalCenter="0" color="#eec500"
            text="{Localizer.string('Ratings', 'label.loading')}"
            visible="{player == null || player.name == ''}"/>
   <base:Scroller id="scroller" left="0" right="0" top="0" bottom="9" 
                  stepMultiplier="15">
      <s:Group width="100%" visible="{player != null &amp;&amp; player.name != ''}">
         <s:Group width="100%">
            <s:Group>
               <s:BitmapImage left="0" top="0" id="topLeft" 
                              source="{IMG.getImage(AssetNames.UI_IMAGES_FOLDER + 
                              'player_screen/left')}"/>
               <s:BitmapImage right="0" top="0" id="topRight"
                              source="{IMG.getImage(AssetNames.UI_IMAGES_FOLDER + 
                              'player_screen/right')}"/>
               <s:BitmapImage left="{topLeft.width}" right="{topRight.width}" 
                              fillMode="repeat"
                              source="{IMG.getImage(AssetNames.UI_IMAGES_FOLDER + 
                              'player_screen/center')}"/>
               <mx:Image left="76" top="57" width="110" height="130" maintainAspectRatio="true"
                         horizontalAlign="center" verticalAlign="middle"
                         source="{UrlNavigate.getInstance().urlRoot + 
                         'user/avatar/' + player.name}"/>
               <base:AdvancedContainer left="215" right="0" top="20">
                  <s:Group width="100%" 
                           toolTipCreate="player.createStatusTooltip(event)"
                           toolTip=" ">
                     <s:BitmapImage source="{ImagePreloader.getInstance().getImage(
                                    AssetNames.getIconImageName(player.online?'online':'offline'))}"/>
                     <s:Label text="{player.name}" fontSize="24" color="#eec500" width="100%"/>
                     <s:layout>
                        <s:HorizontalLayout/>
                     </s:layout>
                  </s:Group>
                  <s:Group width="180" visible="{player.alliance != null}">
                     <s:Label text="{Localizer.string('Alliances', 'label.inAlliance')}" 
                              fontSize="14"/>
                     <s:Button label="{player.alliance.name}" fontSize="14" 
                               skinClass="components.skins.LinkButtonSkin"
                               click="alliance_clickHandler(event)" width="100%"/>
                     <s:layout>
                        <s:HorizontalLayout paddingBottom="8" gap="4" paddingTop="3"/>
                     </s:layout>
                  </s:Group>
                  <s:Label visible="{player.alliance == null}" paddingBottom="8" paddingTop="3" 
                           text="{Localizer.string('Alliances', 'label.notInAlliance')}" />
                  <s:Group width="100%">
                  <s:Group width="100%">
                     <s:Label width="120" text="{Localizer.string('Ratings', 'economyPoints')}"/>
                     <s:Label text="{player.economyPoints}"/>
                     <s:layout>
                        <s:HorizontalLayout/>
                     </s:layout>
                  </s:Group>
                  <s:Group width="100%">
                     <s:Label width="120" text="{Localizer.string('Ratings', 'sciencePoints')}"/>
                     <s:Label text="{player.sciencePoints}"/>
                     <s:layout>
                        <s:HorizontalLayout/>
                     </s:layout>
                  </s:Group>
                  <s:Group width="100%">
                     <s:Label width="120" text="{Localizer.string('Ratings', 'armyPoints')}"/>
                     <s:Label text="{player.armyPoints}"/>
                     <s:layout>
                        <s:HorizontalLayout/>
                     </s:layout>
                  </s:Group>
                  <s:Group width="100%">
                     <s:Label width="120" text="{Localizer.string('Ratings', 'warPoints')}"/>
                     <s:Label text="{player.warPoints}"/>
                     <s:layout>
                        <s:HorizontalLayout/>
                     </s:layout>
                  </s:Group>
                  <s:Group width="100%">
                     <s:Label width="120" text="{Localizer.string('Ratings', 'victoryPoints')}"/>
                     <s:Label text="{player.victoryPoints}"/>
                     <s:layout>
                        <s:HorizontalLayout/>
                     </s:layout>
                  </s:Group>
                  <s:Group width="100%">
                     <s:Label width="120" text="{Localizer.string('Ratings', 'points')}"/>
                     <s:Label text="{player.points}"/>
                     <s:layout>
                        <s:HorizontalLayout/>
                     </s:layout>
                  </s:Group>
                  <s:Group width="100%"
                           visible="{ML.latestGalaxy.apocalypseHasStarted}"
                           includeInLayout="{ML.latestGalaxy.apocalypseHasStarted}">
                     <s:Label width="120" text="{Localizer.string('Ratings', 'deathDay')}"/>
                     <s:Label text="{player.deathDayLabel}" toolTip="{player.deathDayTooltip}"/>
                     <s:layout>
                        <s:HorizontalLayout/>
                     </s:layout>
                  </s:Group>
                     <s:layout>
                        <s:VerticalLayout gap="4"/>
                     </s:layout>
                  </s:Group>
                  <base:layout>
                     <s:VerticalLayout paddingLeft="20"/>
                  </base:layout>
               </base:AdvancedContainer>
               <base:AdvancedContainer left="300" top="207" width="220">
                  <s:Button label="{Localizer.string('Players', 'label.inRatings')}" 
                            click="ratings_clickHandler(event)"/>
                  <s:Button label="{Localizer.string('Players', 'label.sendMessage')}" 
                            click="chat_clickHandler(event)"
                            visible="{ModelLocator.getInstance().player.id != player.id}"/>
                  <base:layout>
                     <s:HorizontalLayout horizontalAlign="right" gap="10"/>
                  </base:layout>
               </base:AdvancedContainer>
            </s:Group>
            <base:Panel skinClass="components.skins.LargePanelSkin"
                        title="{Localizer.string('Players', 'title.achievements')}">
               <s:DataGroup width="100%" dataProvider="{achievements}" 
                            itemRenderer="components.achievement.IRAchievement">
                  <s:layout>
                     <s:TileLayout requestedColumnCount="9"/>
                  </s:layout>
               </s:DataGroup>
               <base:layout>
                  <s:VerticalLayout paddingTop="20"/>
               </base:layout>
            </base:Panel>
            <s:layout>
               <s:VerticalLayout horizontalAlign="center" paddingTop="10" paddingBottom="10"
                                 gap="10"/>
            </s:layout>
         </s:Group>
      </s:Group>
   </base:Scroller>
   <screens:ScreenCloseButton label="{Localizer.string('Players', 'label.close')}"
                              click="NC.showPreviousScreen()"
                              scroller="{scroller}" right="0" bottom="0"/>
</s:Group>
