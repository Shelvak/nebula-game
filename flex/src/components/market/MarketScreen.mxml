<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" 
         xmlns:ui="components.ui.*"
         width="100%" height="100%" 
         xmlns:market="components.market.*">
   <fx:Script>
      <![CDATA[
         import components.market.events.MarketEvent;
         
         import models.ModelsCollection;
         import models.market.MCMarketScreen;
         import models.market.MarketOffer;
         import models.resource.ResourceType;
         
         import utils.assets.AssetNames;
         import utils.assets.ImagePreloader;
         import utils.locale.Localizer;
         
         
         private var _filterWhat:String;
         private var _filterTo:String;
         private function setTypeFilter(_what: String, _to: String) : void
         {
            if (_filterWhat != _what || _filterTo != _to)
            {
               _filterWhat = _what;
               _filterTo = _to;
            }
         }
         
         private function getText(prop: String, params: Array = null): String
         {
            return Localizer.string('Market', prop, params);
         }
         

         protected function cFilter_selectedResourceChangeHandler(event:MarketEvent):void
         {
            function filterList(list: ModelsCollection): void
            {
               setTypeFilter(cFilter.selectedFrom, cFilter.selectedTo);
               list.filterFunction = function (item: MarketOffer): Boolean
               {
                  return (_filterWhat == null || item.fromResource == _filterWhat)
                  && (_filterTo == null || _filterTo == ResourceType.ALL || item.toResource == _filterTo);
               }
               list.refresh();
            }
            filterList(mScreen.privateOffers);
            filterList(mScreen.publicOffers);
         }
         
         [Bindable]
         private var mScreen: MCMarketScreen = MCMarketScreen.getInstance();
         
         
         private function getImage(name:String) : BitmapData
         {
            return ImagePreloader.getInstance().getImage(
               AssetNames.MARKET_SCREEN_IMAGE_FOLDER + name);
         }

         protected function tab_clickHandler(event:MouseEvent):void
         {
            mScreen.currentTab = 'left';
         }

      ]]>
   </fx:Script>
   <market:CMarketOfferFilter top="0" id="cFilter" left="0" right="0"
                              selectedResourceChange="cFilter_selectedResourceChangeHandler(event)"/>
   <market:CMarketOffers id="offersList" top="{cFilter.height}"
                         maxHeight="{height - (cFilter.height + 
                         (offersList.selected != null?cAction.height:0))}"
                         offers="{cFilter.onlyPrivateOffers
                         ? mScreen.privateOffers
                         : mScreen.publicOffers}" 
                         left="0" right="0"
                         visible="{!(cFilter.onlyPrivateOffers
                         ? mScreen.privateOffers.isEmpty
                         : mScreen.publicOffers.isEmpty)}"/>
   <s:Rect left="0" right="0" bottom="{offersList.selected != null?cAction.height:0}" 
           top="{cFilter.height + ((cFilter.onlyPrivateOffers
           ? mScreen.privateOffers.isEmpty
           : mScreen.publicOffers.isEmpty)
           ?0:offersList.height)}">
      <s:fill>
         <s:SolidColor color="#0a0a0a"/>
      </s:fill>
   </s:Rect>
   <s:Label visible="{cFilter.onlyPrivateOffers
            ? mScreen.privateOffers.isEmpty
            : mScreen.publicOffers.isEmpty}"
            top="{cFilter.height}" 
            bottom="{offersList.selected != null?cAction.height:0}"
            verticalAlign="middle" horizontalCenter="0"
            fontSize="36" fontWeight="bold" color="0x1C1C1C"
            text="{getText('label.noOffers')}"/>
   <market:CMarketOfferAction selectedOffer="{offersList.selected}" 
                              visible="{offersList.selected != null}"
                              id="cAction" bottom="0" 
                              left="0" right="0"/>
</s:Group>
