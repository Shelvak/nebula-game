<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                xmlns:s="library://ns.adobe.com/flex/spark" 
                xmlns:mx="library://ns.adobe.com/flex/mx"
                autoDrawBackground="false" 
                xmlns:base="components.base.*"
                width="100%"
                click="itemrenderer1_clickHandler(event)">
   <fx:Script>
      <![CDATA[
         import components.alliance.AllianceScreenM;
         import components.skins.LinkButtonSkin;
         
         import controllers.ui.NavigationController;
         
         import globalevents.GMarketEvent;
         
         import models.market.MarketOffer;
         import models.player.MRatingPlayer;
         
         import utils.DateUtil;
         import utils.MathUtil;
         import utils.assets.AssetNames;
         import utils.assets.ImagePreloader;
         import utils.locale.Localizer;
         [Bindable]
         private var offer: MarketOffer;
         
         public override function set data(value:Object):void
         {
            offer = MarketOffer(value);
         }
         
         public override function get data():Object
         {
            return offer;
         }
         

         protected function itemrenderer1_clickHandler(event:MouseEvent):void
         {
            new GMarketEvent(GMarketEvent.OFFER_SELECTED, offer);
         }

      ]]>
   </fx:Script>
   <s:Rect left="0" right="0" top="0" bottom="0">
      <s:fill>
         <s:SolidColor color="{offer.selected?0x414141
                       :(itemIndex%2==0?0x0e0e0e:0x141414)}"/>
      </s:fill>
   </s:Rect>
   <s:Group top="3" bottom="3" horizontalCenter="0">
      <s:layout>
         <s:HorizontalLayout gap="1" verticalAlign="middle"/>
      </s:layout>
      <s:Group width="{OffersColumnsWidths.from}">
         <s:Button label="{offer.from}" width="100%" skinClass="components.skins.LinkButtonSkin"
                   click="NavigationController.getInstance().showPlayer(offer.fromId)"
                   enabled="{offer.fromId != 0}"/>
      </s:Group>
      <base:ImageAndLabel textToDisplay="{offer.fromAmount}" type="{offer.fromResource}"
                          width="{OffersColumnsWidths.fromAmount}"
                          paddingLeft="6"/>
      <base:ImageAndLabel textToDisplay="{Math.ceil(offer.toRate * offer.fromAmount)}"
                          type="{offer.toResource}"
                          width="{OffersColumnsWidths.toAmount}"
                          paddingLeft="6"/>
      <s:Label text="{MathUtil.round(offer.toRate,4).toString()}" width="{OffersColumnsWidths.rate}" 
               textAlign="center"/>
      <s:Label text="{offer.createdAt==null?''
               :DateUtil.formatShortDateTime(offer.createdAt)}" 
               width="{OffersColumnsWidths.createdAt}"
               textAlign="center"/>
   </s:Group>
</s:ItemRenderer>