<?xml version="1.0" encoding="utf-8"?>
<base:BaseContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
                    xmlns:s="library://ns.adobe.com/flex/spark" 
                    xmlns:mx="library://ns.adobe.com/flex/mx" 
                    xmlns:base="components.base.*"
                    xmlns:unit="components.unit.*"
                    xmlns:components="utils.components.*"
                    xmlns:infoscreen="components.infoscreen.*"
                    xmlns:screens="components.screens.*"
                    creationComplete="basecontainer1_creationCompleteHandler(event)"
                    width="100%" height="100%" xmlns:table="components.infoscreen.table.*">
   <fx:Script>
      <![CDATA[
         import components.infoscreen.table.InfoTableLevel;
         import components.skins.LargePanelSkin;
         import components.skins.ListNonScrollableSkin;

         import controllers.objects.ObjectClass;

         import models.infoscreen.ArmorTypes;
         import models.infoscreen.Gun;
         import models.infoscreen.MCInfoScreen;
         import models.infoscreen.events.InfoScreenEvent;
         import models.resource.ResourceType;
         
         import mx.events.FlexEvent;
         
         import spark.filters.BlurFilter;
         
         import utils.assets.AssetNames;
         import utils.locale.Localizer;
         
         private static const blur: BlurFilter = new BlurFilter(1.3,1.3,1);
         
         private static const blurFilter: Array = new Array(blur);
         
         [Bindable]
         private var INFO: MCInfoScreen = MCInfoScreen.getInstance();
         
         private function modelChanged(e: InfoScreenEvent = null): void
         {
            sViewport.verticalScrollPosition = 0; 
            resetLevelSelector();
         }
         
         private function resetLevelSelector(e: InfoScreenEvent = null): void
         {
            if (INFO.model != null)
            {
               lvlSelector.value = INFO.model.usefulLevel;
            }
         }
         
         private function refreshSelectedGun(e: Event = null): void
         {
            INFO.gunsList_changeHandler(gunsList.selectedItem);
         }
         
         /**
         * 
         * Data provider is alreadyt built, but list will update it's items
         * a bit later. We must catch this moment.
         * 
         */
         private function refreshGuns(e: InfoScreenEvent = null): void
         {
            gunsList.validateNow();
            refreshSelectedGun();
         }
         
         protected function basecontainer1_creationCompleteHandler(event:FlexEvent):void
         {
            INFO.addEventListener(InfoScreenEvent.MODEL_CHANGE, modelChanged);
            INFO.addEventListener(InfoScreenEvent.MODEL_LEVEL_CHANGE, resetLevelSelector);
            INFO.addEventListener(InfoScreenEvent.REFRESH_SELECTED_GUN, refreshSelectedGun);
            INFO.addEventListener(InfoScreenEvent.GUNS_CREATED, refreshGuns);
            modelChanged();
            refreshGuns();
         }
      
         private function getString(prop: String,  params: Array = null): String
         {
            return Localizer.string('InfoScreen', prop, params);
         }
         
      ]]>
   </fx:Script>
   
   <screens:GradientBackground gradientWidth="{(width - contentGroup.width) / 2}"/>
   
   <base:AdvancedContainer bottom="0" left="0" top="0" right="0">
      <base:Scroller id="scrollCont" top="9" bottom="9" width="100%" 
                     height="100%" right="0" horizontalScrollPolicy="off" 
                     stepMultiplier="15">
         <s:Group id="sViewport" left="0" height="100%" right="{scrollCont.verticalScrollBar.width}">
            
            <s:Group id="contentGroup" height="100%" 
                     width="{773 - scrollCont.verticalScrollBar.width}" 
                     horizontalCenter="0">
               <base:AdvancedContainer width="100%">
                  <s:Group>
                     <s:BitmapImage left="0" top="0" id="panelLeft"
                                    source="{IMG.getImage(AssetNames.INFO_SCREEN_IMAGES_FOLDER + 
                                    'panel_left')}"/>
                     <s:BitmapImage right="0" top="0" id="panelRight"
                                    source="{IMG.getImage(AssetNames.INFO_SCREEN_IMAGES_FOLDER + 
                                    'panel_right')}"/>
                     <s:BitmapImage left="{panelLeft.width}" top="0" right="{panelRight.width}"
                                    source="{IMG.getImage(AssetNames.INFO_SCREEN_IMAGES_FOLDER + 
                                    'panel_center')}"/>
                     
                     <components:CenteredBitmapImage height="200" width="200" left="22" top="61"
                                                     source="{INFO.model.imageSource}"/>
                     
                     <!-- tekstas is desines 31, x240, y68  arm 257, 14-->
                     <s:Group left="240" top="13" right="0">
                        <s:Group left="16" toolTip="{INFO.model.armorType != null
                                 ? getString('armor.'+ INFO.model.armorType) : ''}">
                           <s:BitmapImage width="32"
                                          source="{IMG.getImage(AssetNames.getIconImageName(
                                          (INFO.model.armorType != null
                                          ?INFO.model.armorType
                                          :'none')))}"/>
                           <s:Label text="{INFO.model.name}" styleName="h1" color="#eec500" paddingLeft="6" paddingTop="10"/>
                           <s:layout>
                              <s:HorizontalLayout/>
                           </s:layout>
                        </s:Group>
                        
                        <base:AdvancedContainer top="54" left="0" right="31">
                           <s:Group visible="{!(INFO.model.objectType != 'building' || INFO.getTechArmorMod(INFO.model.type) == 0)
                                    || !(INFO.model.objectType != 'unit' || INFO.getTechArmorMod(INFO.model.type) == 0)}"
                                   toolTip="{getString('tooltip.armorFromTechs')}">
                              
                              <s:Label text="{getString('armorFromTechs')}"/>
                              <s:Label text="{(INFO.getTechArmorMod(INFO.model.type) > 0? '+':'') + INFO.getTechArmorMod(INFO.model.type) + '%'}"
                                       color="{INFO.getTechArmorMod(INFO.model.type) > 0?0x00ff00 : 0xff0000}"/>
                              <s:layout>
                                 <s:HorizontalLayout/>
                              </s:layout>
                           </s:Group>
                           <s:Group visible="{!(INFO.model.objectType != 'building' || INFO.getTechArmorMod(INFO.model.type) == 0)
                                     || !(INFO.model.objectType != 'unit' || INFO.getTechArmorMod(INFO.model.type) == 0)}"
                                    toolTip="{getString('tooltip.absorptionFromTechs')}">

                             <s:Label text="{getString('absorptionFromTechs')}"/>
                             <s:Label text="{(INFO.getTechAbsorptionMod(INFO.model.type) > 0? '+':'') + INFO.getTechAbsorptionMod(INFO.model.type) + '%'}"
                                      color="{INFO.getTechAbsorptionMod(INFO.model.type) > 0?0x00ff00 : 0xff0000}"/>
                             <s:layout>
                               <s:HorizontalLayout/>
                             </s:layout>
                           </s:Group>
                           <s:Label text="{INFO.model.description}" left="0" right="0"/>
                           
                           <s:Group visible="{INFO.deploysTo != null}">
                              <s:Label text="{getString('deploysTo')}"
                                       fontWeight="bold" fontSize="15"/>
                              <components:CenteredBitmapImage height="70" width="100" 
                                                              toolTip="{INFO.deploysTo != null
                                                              ?Localizer.string('Buildings', INFO.deploysTo+'.name'):''}" 
                                                              source="{IMG.getImage(AssetNames.getBuildingImageName(INFO.deploysTo))}"/>
                              <s:layout>
                                 <s:HorizontalLayout verticalAlign="middle" horizontalAlign="center" paddingTop="10"/>
                              </s:layout>
                           </s:Group>
                           <base:layout>
                              <s:VerticalLayout horizontalAlign="justify"/>
                           </base:layout>
                        </base:AdvancedContainer>
                     </s:Group>
                  </s:Group>
                  
                  <s:Panel title="{getString('title.details')}"
                           skinClass="components.skins.LargePanelSkin"
                           creationComplete="
                           INFO.refreshDataForTable()">
                     <base:AdvancedContainer width="100%">
                        
                        <s:Label text="{getString('currentLevel') +
                                 ': ' + INFO.model.currentLevel.toString()}" styleName="h2" 
                                                                             visible="{INFO.model.currentLevel > 0}"/>
                        <s:Group width="100%" visible="{INFO.guns.length != 0}">
                           <s:Label text="{getString('guns')}"
                                    styleName="h2" top="6"/>
                           <s:BitmapImage top="25" source="{IMG.getImage(AssetNames.INFO_SCREEN_IMAGES_FOLDER + 'line')}"/>
                           <base:AdvancedContainer top="38" width="100%">
                              <s:Group visible="{INFO.getTechDamageMod(INFO.model.type) != 0}"
                                       toolTip="{getString('tooltip.damageFromTechs')}">
                                 
                                 <s:Label text="{getString('damageFromTechs')}"/>
                                 <s:Label text="{(INFO.getTechDamageMod(INFO.model.type) > 0? '+':'') + INFO.getTechDamageMod(INFO.model.type) + '%'}"
                                          color="{INFO.getTechDamageMod(INFO.model.type) > 0?0x00ff00 : 0xff0000}"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              <s:Group visible="{INFO.getTechCriticalMod(INFO.model.type) != 0}"
                                       toolTip="{getString('tooltip.criticalFromTechs')}">

                                <s:Label text="{getString('criticalFromTechs')}"/>
                                <s:Label text="{(INFO.getTechCriticalMod(INFO.model.type) > 0? '+':'') + INFO.getTechCriticalMod(INFO.model.type) + '%'}"
                                         color="{INFO.getTechCriticalMod(INFO.model.type) > 0?0x00ff00 : 0xff0000}"/>
                                <s:layout>
                                  <s:HorizontalLayout/>
                                </s:layout>
                              </s:Group>
                              <s:Group visible="{ML.player.population > ML.player.populationMax}">
                                 <s:Label text="{Localizer.string('Units', 'tooltip.overPopulation', [ML.player.overPopulationAntibonus])}"
                                          styleName="unsatisfied"/>
                              </s:Group>
                              <base:layout>
                                 <s:VerticalLayout horizontalAlign="justify" paddingTop="4"/>
                              </base:layout>
                           </base:AdvancedContainer>
                        </s:Group>
                        <s:Group width="100%" height="{gunLayout.rowCount * 35}" visible="{gunsList.dataProvider.length != 0}">
                           <base:AdvancedList id="gunsList" height="100%" 
                                              left="6" right="6" dataProvider="{INFO.guns}"
                                              contentBackgroundColor="#0f0f0f"  
                                              contentBackgroundAlpha="0"
                                              requireSelection="true"
                                              change="INFO.gunsList_changeHandler(gunsList.selectedItem)"
                                              skinClass="components.skins.ListNonScrollableSkin"
                                              rollOverColor="#4f4f4f" selectionColor="#2f2f2f" 
                                              borderVisible="false">
                              <base:itemRenderer>
                                 <fx:Component>
                                    <s:ItemRenderer>
                                       <fx:Script>
                                          <![CDATA[
                                             import models.infoscreen.Gun;
                                          ]]>
                                       </fx:Script>
                                       <base:ImageAndLabel type="{(data as Gun).type}" 
                                                           textToDisplay="{(data as Gun).title}"
                                                           count="{(data as Gun).count}"/>
                                       
                                    </s:ItemRenderer>
                                 </fx:Component>
                              </base:itemRenderer>
                              <base:layout>
                                 <s:TileLayout id="gunLayout" verticalGap="2" horizontalGap="2"/>
                              </base:layout>
                           </base:AdvancedList>
                        </s:Group>
                        <s:Group width="100%" visible="{INFO.guns.length != 0}">
                           <base:Panel id="gunPropertiesContainer" height="100%"
                                       title="{getString('gunProperties',
                                       [INFO.selectedGun.title])}">
                              <s:Group>
                                 <s:Label text="{getString('damageType')}" width="150"
                                          styleName="h3"/>
                                 <s:Label text="{INFO.selectedGun.damageTitle}" width="100"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <s:Group>
                                 <s:Label text="{getString('reach')}" width="150"
                                          styleName="h3"/>
                                 <s:Label text="{INFO.selectedGun.reachTitle}" width="100"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <s:Group>
                                 <s:Label text="{getString('cooldown')}" width="150"
                                          styleName="h3"/>
                                 <s:Label text="{INFO.selectedGun.period}" width="100"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <s:Group>
                                 <s:Label text="{getString('baseDamage')}" width="150"
                                          styleName="h3"/>
                                 <s:Label text="{INFO.selectedGun.getDamagePerTickString(
                                          int(lvlSelector.value))}" 
                                          width="100"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <base:layout>
                                 <s:VerticalLayout paddingLeft="6" paddingTop="6" paddingBottom="6"/>
                              </base:layout>
                           </base:Panel>
                           <base:Panel id="percentagesContainer" title="{getString('damagesDealt',
                                       [INFO.selectedGun.title])}" left="{gunPropertiesContainer.width + 10}" right="0">
                              <s:Group>
                                 <s:Label text="{getString('armorType')}" width="150" styleName="h3"/>
                                 <s:Label text="{getString('damageInPercent')}" styleName="h3"
                                          width="100"/>
                                 <s:Label text="{getString('damage')}" width="100" styleName="h3"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <s:Group>
                                 <base:ImageAndLabel type="{ArmorTypes.LIGHT}" 
                                                     textToDisplay="{getString('armorShort.'+
                                                     ArmorTypes.LIGHT)}" width="150"/>
                                 <s:Label text="{INFO.selectedGun.getPercentage(ArmorTypes.LIGHT, INFO.getTechDamageMod(INFO.model.type))}" 
                                          width="100" height="100%" verticalAlign="middle"/>
                                 <s:Label text="{INFO.selectedGun.getDamage(ArmorTypes.LIGHT,
                                          int(lvlSelector.value), INFO.getTechDamageMod(INFO.model.type))}"  height="100%" verticalAlign="middle"
                                                                                                        width="100"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <s:Group>
                                 <base:ImageAndLabel type="{ArmorTypes.NORMAL}" 
                                                     textToDisplay="{Localizer.string('InfoScreen', 'armorShort.'+
                                                     ArmorTypes.NORMAL)}" width="150"/>
                                 <s:Label text="{INFO.selectedGun.getPercentage(ArmorTypes.NORMAL, INFO.getTechDamageMod(INFO.model.type))}" 
                                          width="100" height="100%" verticalAlign="middle"/>
                                 <s:Label text="{INFO.selectedGun.getDamage(ArmorTypes.NORMAL,
                                          int(lvlSelector.value), INFO.getTechDamageMod(INFO.model.type))}" 
                                          width="100" height="100%" verticalAlign="middle"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <s:Group>
                                 <base:ImageAndLabel type="{ArmorTypes.HEAVY}" 
                                                     textToDisplay="{getString('armorShort.'+
                                                     ArmorTypes.HEAVY)}" width="150"/>
                                 <s:Label text="{INFO.selectedGun.getPercentage(ArmorTypes.HEAVY, INFO.getTechDamageMod(INFO.model.type))}" 
                                          width="100" height="100%" verticalAlign="middle"/>
                                 <s:Label text="{INFO.selectedGun.getDamage(ArmorTypes.HEAVY,
                                          int(lvlSelector.value), INFO.getTechDamageMod(INFO.model.type))}" 
                                          width="100" height="100%" verticalAlign="middle"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <s:Group>
                                 <base:ImageAndLabel type="{ArmorTypes.FORTIFIED}" 
                                                     textToDisplay="{getString('armorShort.'+
                                                     ArmorTypes.FORTIFIED)}" width="150"/>
                                 <s:Label text="{INFO.selectedGun.getPercentage(ArmorTypes.FORTIFIED, INFO.getTechDamageMod(INFO.model.type))}" 
                                          width="100" height="100%" verticalAlign="middle"/>
                                 <s:Label text="{INFO.selectedGun.getDamage(ArmorTypes.FORTIFIED,
                                          int(lvlSelector.value), INFO.getTechDamageMod(INFO.model.type))}" 
                                          width="100" height="100%" verticalAlign="middle"/>
                                 <s:layout>
                                    <s:HorizontalLayout/>
                                 </s:layout>
                              </s:Group>
                              
                              <base:layout>
                                 <s:VerticalLayout paddingLeft="6" paddingTop="6" paddingBottom="6"/>
                              </base:layout>
                           </base:Panel>
                        </s:Group>
                        
                        
                        <s:Group width="100%" visible="{(INFO.guns.length != 0)}">
                           
                           <base:Panel title="{getString('bestAgainst')}"
                                       left="0" top="0" right="0" id="bestPanel">
                              <s:DataGroup left="6" right="6" top="6" dataProvider="{INFO.bestAgainst}"
                                           height="{bestTargetsLayout.rowCount * 54}" maxWidth="{bestPanel.width - 12}"
                                           itemRenderer="components.infoscreen.IRUnitBuildingForInfo">
                                 <s:layout>
                                    <s:TileLayout id="bestTargetsLayout" horizontalGap="3" verticalGap="3"/>
                                 </s:layout>
                              </s:DataGroup>
                           </base:Panel>
                        </s:Group>
                        
                        
                        <s:Group visible="{INFO.model.usefulLevel &lt; INFO.model.maxLevel}" width="100%">
                           <s:Label text="{getString('level') + ':'}" styleName="h3"/>
                           <s:Label horizontalCenter="0" text="{int(lvlSelector.value)}"  styleName="h3"/>
                           
                           <s:Group width="100%">
                              <s:Label text="1" left="0" styleName="h3"/>
                              <base:AdvancedHSlider dataTipPrecision="0" id="lvlSelector" left="20" right="20"
                                                    minimum="1"
                                                    maximum="{INFO.model.maxLevel}"
                                                    showDataTip="false" change="
                                                    INFO.sliderMoved = true;
                                                    INFO.selectedLevel = lvlSelector.value;
                                                    INFO.refreshDataForTable()"/>
                              <s:Label text="{INFO.model.maxLevel.toString()}" right="0" styleName="h3"/>
                           </s:Group>
                           
                           <s:layout>
                              <s:HorizontalLayout gap="10"/>
                           </s:layout>
                        </s:Group>
                        
                        <base:Panel visible="{!((INFO.model.currentLevel == INFO.model.maxLevel)
                                              || (INFO.isNpc)
                                              || (lvlSelector.value &lt;= INFO.model.currentLevel))}"
                                    title="{getString('cost')}" width="100%">
                           <base:AdvancedContainer width="100%">
                              
                              <s:Group width="100%">
                                 <s:Label text="{getString('atLevel', [INFO.model.usefulLevel.toString()])}" width="60"
                                          visible="{INFO.model.objectType != 'unit'}"/>
                                 <base:ImageAndLabel type="{ResourceType.METAL}" textToDisplay="{INFO.cMetalCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.METAL)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.ENERGY}" textToDisplay="{INFO.cEnergyCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.ENERGY)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.ZETIUM}" textToDisplay="{INFO.cZetiumCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.ZETIUM)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.TIME}" textToDisplay="{INFO.cTimeCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.TIME)}" width="80"/> 
                                 <s:layout>
                                    <s:HorizontalLayout paddingLeft="6" gap="50"/>
                                 </s:layout>
                              </s:Group>
                              <s:Group width="100%"
                                       visible="{!(lvlSelector.value == INFO.model.usefulLevel || INFO.model.objectType == 'unit')}">
                                 <s:Label text="{getString('atLevel', [lvlSelector.value.toString()])}" width="60"/>
                                 <base:ImageAndLabel type="{ResourceType.METAL}" textToDisplay="{INFO.tMetalCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.METAL)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.ENERGY}" textToDisplay="{INFO.tEnergyCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.ENERGY)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.ZETIUM}" textToDisplay="{INFO.tZetiumCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.ZETIUM)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.TIME}" textToDisplay="{INFO.tTimeCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.TIME)}" width="80"/> 
                                 <s:layout>
                                    <s:HorizontalLayout paddingLeft="6" gap="50"/>
                                 </s:layout>
                              </s:Group>
                              <s:Group width="100%" visible="{!(lvlSelector.value == INFO.model.usefulLevel || INFO.model.objectType == 'unit')}">
                                 <s:Label text="{getString('difference')}" width="60"/>
                                 <base:ImageAndLabel type="{ResourceType.METAL}" textToDisplay="{INFO.dMetalCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.METAL)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.ENERGY}" textToDisplay="{INFO.dEnergyCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.ENERGY)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.ZETIUM}" textToDisplay="{INFO.dZetiumCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.ZETIUM)}" width="80"/>
                                 <base:ImageAndLabel type="{ResourceType.TIME}" textToDisplay="{INFO.dTimeCostString}"
                                                     toolTip="{Localizer.string('Resources', ResourceType.TIME)}" width="80"/> 
                                 <s:layout>
                                    <s:HorizontalLayout paddingLeft="6" gap="50"/>
                                 </s:layout>
                              </s:Group>
                              <base:layout>
                                 <s:VerticalLayout/>
                              </base:layout>
                           </base:AdvancedContainer>
                        </base:Panel>
                        <base:Panel visible="{!((INFO.model.currentLevel == INFO.model.maxLevel) 
                                    || (INFO.model.currentLevel == lvlSelector.value) 
                                    || (INFO.model.objectType == 'unit')
                                    || (lvlSelector.value - INFO.model.currentLevel &lt; 2))}"  
                                    title="{getString('fullUpgradeCost', [lvlSelector.value.toString()])}" width="100%">
                           <base:ImageAndLabel type="{ResourceType.METAL}" textToDisplay="{INFO.metalCostString}"
                                               toolTip="{Localizer.string('Resources', ResourceType.METAL)}" width="80"/>
                           <base:ImageAndLabel type="{ResourceType.ENERGY}" textToDisplay="{INFO.energyCostString}"
                                               toolTip="{Localizer.string('Resources', ResourceType.ENERGY)}" width="80"/>
                           <base:ImageAndLabel type="{ResourceType.ZETIUM}" textToDisplay="{INFO.zetiumCostString}"
                                               toolTip="{Localizer.string('Resources', ResourceType.ZETIUM)}" width="80"/>
                           <base:ImageAndLabel type="{ResourceType.TIME}" textToDisplay="{INFO.timeCostString}"
                                               toolTip="{Localizer.string('Resources', ResourceType.TIME)}" width="80"/> 
                           <base:layout>
                              <s:HorizontalLayout paddingLeft="116" gap="50"/>
                           </base:layout>
                        </base:Panel>
                        
                        
                        <base:Panel id="dataTable" title="{getString('tableTitle')}" width="100%">
                           <base:AdvancedContainer left="0" right="0" top="0" id="header">
                              <table:InfoTableHeaderFull visible="{INFO.getTableLevel(INFO.model.currentLevel,
                                                         INFO.model.maxLevel, lvlSelector.value) == InfoTableLevel.FULL}"/>
                              <table:InfoTableHeaderHalf visible="{INFO.getTableLevel(INFO.model.currentLevel,
                                                         INFO.model.maxLevel, lvlSelector.value) == InfoTableLevel.HALF}"/>
                              <table:InfoTableHeaderEmpty visible="{INFO.getTableLevel(INFO.model.currentLevel,
                                                         INFO.model.maxLevel, lvlSelector.value) == InfoTableLevel.EMPTY}"/>
                           </base:AdvancedContainer>
                           <s:DataGroup dataProvider="{INFO.dataForTable}" left="0" right="0" top="{header.height}"
                                        itemRenderer="{INFO.getTableItemRenderer(INFO.model.currentLevel,
                                        INFO.model.maxLevel, lvlSelector.value)}"
                                        height="{18 * INFO.dataForTable.length}">
                              <s:layout>
                                 <s:VerticalLayout id="tblLayout" gap="0" horizontalAlign="justify"/>
                              </s:layout>
                           </s:DataGroup>
                        </base:Panel>
                        
                        <s:Group width="100%" visible="{INFO.weakAgainst.length > 0}">
                           <base:Panel id="weakPanel" title="{getString(
                              INFO.model.objectType == ObjectClass.TECHNOLOGY
                              ? 'appliesTo'
                              : 'weakAgainst')}" left="0" right="0">
                              <s:DataGroup left="6" right="6" top="6" maxWidth="{weakPanel.width - 12}" 
                                           dataProvider="{INFO.weakAgainst}"
                                           height="{bestAttackersLayout.rowCount * 54}"
                                           itemRenderer="components.infoscreen.IRUnitBuildingForInfo">
                                 <s:layout>
                                    <s:TileLayout id="bestAttackersLayout" horizontalGap="3" verticalGap="3"/>
                                 </s:layout>
                              </s:DataGroup>
                           </base:Panel>
                        </s:Group>
                        
                        <base:layout>
                           <s:VerticalLayout/>
                        </base:layout>
                     </base:AdvancedContainer>
                  </s:Panel>
                  <base:layout>
                     <s:VerticalLayout paddingLeft="10" paddingRight="10" 
                                       paddingBottom="20" paddingTop="8" gap="10"
                                       horizontalAlign="justify"/>
                  </base:layout>
               </base:AdvancedContainer>
            </s:Group> 
         </s:Group> 
      </base:Scroller>
   </base:AdvancedContainer>
   <screens:ScreenCloseButton scroller="{scrollCont}" label="{getString('close')}"
                              bottom="0" right="0" click="INFO.close_clickHandler(event)"/>
   
</base:BaseContainer>
